<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jmzc&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jmzc4j.github.io/"/>
  <updated>2019-08-29T06:30:24.928Z</updated>
  <id>https://jmzc4j.github.io/</id>
  
  <author>
    <name>Jmzc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JVM初识</title>
    <link href="https://jmzc4j.github.io/2019/08/29/JVM%E5%88%9D%E8%AF%86/"/>
    <id>https://jmzc4j.github.io/2019/08/29/JVM初识/</id>
    <published>2019-08-29T05:01:43.000Z</published>
    <updated>2019-08-29T06:30:24.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JVM内存模型"><a href="#JVM内存模型" class="headerlink" title="JVM内存模型"></a>JVM内存模型</h3><ul><li>JVM是运行在操作系统之上的，它与硬件没有直接的交互；<br><img src="../../images/jvm.png" alt="JVM模型"></li><li>堆空间和方法区被线程共享;程序计数器、虚拟机栈和本地方法栈被线程私有；</li><li>常见的JVM实现有SUN hotspot、BEA jrockit、IBM j9；</li></ul><h3 id="类装载器"><a href="#类装载器" class="headerlink" title="类装载器"></a>类装载器</h3><ul><li>负责加载class文件，class文件在文件开头有特定的文件标示，并且ClassLoader只负责class文件的加载，至于它是否可以运行，则由Execution Engine决定;</li><li>装载过程：<ol><li>加载：查找并加载字节码文件到内存<ul><li>准确说是将字节码文件的内容加载到运行时数据区的方法区中，并在内存中创建一个Class对象。</li></ul></li><li>连接<ul><li>验证：验证字节码文件的正确性</li><li>准备：为静态变量分配空间并进行默认初始化</li><li>解析：将符号引用转变为直接引用</li></ul></li><li>初始化：为静态变量进行真实初始化<ul><li>只有在首次主</li></ul></li></ol></li><li>装载器分类<br><img src="../../iamges/classloader.png" alt="ClassLoader继承"></li><li>虚拟机自带的加载器:<br>  启动类加载器（Bootstrap）C++<br>  扩展类加载器（Extension）Java<br>  应用程序类加载器（App）Java<br>  也叫系统类加载器，加载当前应用的classpath的所有类</li><li>用户自定义加载器  Java.lang.ClassLoader的子类，用户可以定制类的加载方式;</li></ul><h3 id="执行引擎"><a href="#执行引擎" class="headerlink" title="执行引擎"></a>执行引擎</h3><ul><li>Execution Engine执行引擎负责解释命令，提交操作系统执行（java、javac）;</li></ul><h3 id="Native-Interface本地接口"><a href="#Native-Interface本地接口" class="headerlink" title="Native Interface本地接口"></a>Native Interface本地接口</h3><ul><li>Java语言本身不能对操作系统底层进行访问和操作，但是可以通过JNI接口调用其他语言来实现对底层的访问;</li></ul><h3 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h3><ul><li>登记native方法，在Execution Engine执行时加载本地方法库;</li></ul><h3 id="PC寄存器"><a href="#PC寄存器" class="headerlink" title="PC寄存器"></a>PC寄存器</h3><ul><li>每个线程都有一个程序计数器，是线程私有的,就是一个指针，指向方法区中的方法字节码（用来存储指向下一条指令的地址,也即将要执行的指令代码），由执行引擎读取下一条指令，是一个非常小的内存空间，几乎可以忽略不记;</li></ul><h3 id="虚拟机栈"><a href="#虚拟机栈" class="headerlink" title="虚拟机栈"></a>虚拟机栈</h3><ul><li>主管Java程序的运行，在线程创建时创建，它的生命期是跟随线程的生命期，线程结束栈内存也就释放，对于栈来说不存在垃圾回收问题，只要线程一结束该栈就Over，生命周期和线程一致，是线程私有的。基本类型的变量、实例方法、引用类型变量都是在函数的栈内存中分配。</li><li>java.lang.StackOverflowError：当线程请求深度大于虚拟机允许的深度时发生异常;</li></ul><h3 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h3><ul><li>方法区是线程共享的，通常用来保存装载的类的元结构信息。<br>比如：运行时常量池+静态变量+常量+字段+方法字节码+在类/实例/接口初始化用到的特殊方法等。</li><li>通常和永久区关联在一起(Java7之前)，但具体的跟JVM的实现和版本有关。</li></ul><h3 id="堆空间"><a href="#堆空间" class="headerlink" title="堆空间"></a>堆空间</h3><ul><li>一个JVM实例只存在一个堆内存，堆内存的大小是可以调节的。类加载器读取了类文件后，需要把类、方法、常变量放到堆内存中，保存所有引用类型的真实信息，以方便执行器执行。</li><li>堆内存逻辑上分为三部分：新生+养老+永久（JDK8以前）;<br><img src="../../images/heap.png" alt="堆空间模型"><h4 id="新生区"><a href="#新生区" class="headerlink" title="新生区"></a>新生区</h4></li><li>新生区是类的诞生、成长、消亡的区域，一个类在这里产生，应用，最后被垃圾回收器收集，结束生命；</li><li>新生区又分为两部分：伊甸区（Eden）和幸存者区（Survivor），所有的类都是在伊甸区被new出来的。幸存区有两个： 0区（Survivor 0 space）和1区（Survivor 1 space）;</li><li>当伊甸园的空间用完时，程序又需要创建对象，JVM的垃圾回收器将对伊甸园区进行垃圾回收(MinorGC)，将伊甸园区中的不再被其他对象所引用的对象进行销毁。然后将伊甸园中的剩余对象移动到幸存0区.若幸存0区也满了，再对该区进行垃圾回收，然后移动到1区。那如果1区也满了呢？再移动到养老区。若养老区也满了，那么这个时候将产生MajorGC（FullGC），进行养老区的内存清理。若养老区执行了FullGC之后发现依然无法进行对象的保存，就会产生OOM异常“OutOfMemoryError”。</li><li>如果出现java.lang.OutOfMemoryError: Java heap space异常，说明Java虚拟机的堆内存不够。原因有二：<ol><li>Java虚拟机的堆内存设置不够，可以通过参数-Xms、-Xmx来调整。(初始大小一般是物理内存1/64,最大1/4)</li><li>代码中创建了大量大对象，并且长时间不能被垃圾收集器收集（存在被引用）。</li><li>新生代调整参数：-Xmn；永久代调整参数：-XX:PermSize和-XX:MaxPermSize。</li><li>-XX:+PrintGCDetails  :输出GC处理日志。</li></ol></li><li>使用如下API获取JVM堆内存参数  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">long maxMemory = Runtime.getRuntime().maxMemory() ;//返回 Java 虚拟机试图使用的最大内存量。</span><br><span class="line">long totalMemory = Runtime.getRuntime().totalMemory() ;//返回 Java 虚拟机中的内存总量。</span><br></pre></td></tr></table></figure></li></ul><h3 id="JVM采用分代回收机制"><a href="#JVM采用分代回收机制" class="headerlink" title="JVM采用分代回收机制"></a>JVM采用分代回收机制</h3><ul><li>新生代使用复制算法copying，会浪费50%空间；</li><li>年老代使用标记清除和标记整理算法mark-sweep（会产生不连续的内存碎片）和mark-compack；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JVM内存模型&quot;&gt;&lt;a href=&quot;#JVM内存模型&quot; class=&quot;headerlink&quot; title=&quot;JVM内存模型&quot;&gt;&lt;/a&gt;JVM内存模型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JVM是运行在操作系统之上的，它与硬件没有直接的交互；&lt;br&gt;&lt;img src=&quot;../
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="jvm" scheme="https://jmzc4j.github.io/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>Html初识</title>
    <link href="https://jmzc4j.github.io/2019/08/29/Html%E5%88%9D%E8%AF%86/"/>
    <id>https://jmzc4j.github.io/2019/08/29/Html初识/</id>
    <published>2019-08-29T04:57:50.000Z</published>
    <updated>2019-08-29T04:59:06.377Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-软件的架构"><a href="#一-软件的架构" class="headerlink" title="一 软件的架构"></a>一 软件的架构</h3><ul><li><p>C/S架构：(client-server)客户端服务器架构：    </p><ol><li>用户需要安装客户端来使用软件；</li><li>每次服务端更新后需要更新客户端；</li><li>针对不同的操作系统，需要开发不同的客户端程序，跨平台性差；</li><li>使用自有协议，相对来说安全性较好；</li></ol></li><li><p>B/S架构：(browser-server)浏览器服务器架构:    </p><ol><li>不需要安装客户端，只要有一个浏览器即可；</li><li>软件更新不需要更新客户端；</li><li>由于只需开发服务端，跨平台性较好；</li><li>使用公共的http协议或者https协议，相对C/S架构来说可能安全性稍差；</li></ol></li><li><p>网页组成：根据w3c的标准，一个网页主要由结构、表现和行为组成，即html、css和js。</p></li></ul><h3 id="二-HTML"><a href="#二-HTML" class="headerlink" title="二 HTML"></a>二 HTML</h3><ul><li>html：hypertext markup language,超文本标记语言：<ol><li>不是一门编程语言，而是一门告诉浏览器如何组织页面的标记语言，决定了网页的结构；</li><li>元素是html的基本单位，通常情况下，一个元素有开始标签、结束标签和内容构成；</li><li>HTML标签不区分大小写，从可读性和一致性方面通常使用小写字母；</li><li>元素按照性质可分成块级元素和内联元素两大类别；</li><li>没有内容的元素称之为空元素；</li><li>可以在开始标签中为元素添加属性，属性通常是一组由等号连接的名值对，值用引号包裹；</li><li>当属性没有值或者其值为属性名本身，这样的属性称之为布尔属性；</li></ol></li><li>完整的html页面的组成:   <ol><li>文档类型声明<!doctype html>，h5声明，最短的有效的文档声明；</li><li>html根元素，包裹了一个完整html页面；</li><li>head元素，包裹了所有想包含在html页面中但不想在页面中显示的内容，如标题、描述、关键字、字符集等；</li><li>body元素，包裹了所有想在网页中显示的内容，如文本、图片、音频、视频等；</li></ol></li></ul><h3 id="三-HTML元素"><a href="#三-HTML元素" class="headerlink" title="三 HTML元素"></a>三 HTML元素</h3><ul><li>元数据：meta</li><li>标题和段落：h、p</li><li>超链接和图片：a、img、figure、picture</li><li>列表：ul、ol、dl</li><li>实体：<code>&amp;amp; &amp;nbsp; &amp;lt; &amp;gt; &amp;copy; &amp;quote;</code></li><li>表格：table、tr、td、th、colgroup、col、thead、tfoot、tbody、caption</li><li>表单：form、input（text、password、file、hidden、checkbox、radio、email、number、tel、search）、textarea、select、fieldset</li><li>语气：em、strong、ins、del、small</li><li>引用：blockquote、q、cite</li><li>缩略语和上下标：abbr、sup、sub</li><li>代码：code、pre</li><li>换行和水平分割线：br、hr</li><li>布局：div、span</li><li>语义布局：header、nav、main、section、article、aside、footer</li><li>音频和视频：audio、video</li></ul><h3 id="四-CSS"><a href="#四-CSS" class="headerlink" title="四 CSS"></a>四 CSS</h3><ul><li>css：cascading style sheets，层叠样式表：<ol><li>指定文档如何呈现给用户的语言，用来定义文档的样式和布局，决定了网页的表现；</li><li>css的基本单位就是一个个css规则，一个规则由选择器和css声明块组成（与值配对的属性称之为css声明）；</li><li>css工作原理： 浏览器加载html并解析，然后加载css并解析，在然后将解析后的html和css在dom树上进行渲染，最后呈现给用户；</li><li>添加样式表的方式：外部样式表、内部样式表和内联样式表；<h3 id="五-css选择器"><a href="#五-css选择器" class="headerlink" title="五 css选择器"></a>五 css选择器</h3></li></ol></li><li>基本选择器：元素选择器、类选择器、ID选择器、通用选择器、分组选择器；</li><li>关系选择器：子元素选择器（&gt;）、后代选择器、交集选择器、兄弟选择器(+、~)</li><li>属性选择器：E[att]、E[att=”val”]、E[att^=”val”]、E[att$=”val”]、E[att*=”val”]、E[att|=”val”]、E[att~=”val”]</li><li>伪类选择器：E:link、E:visited、E:hover、E:active、E:focus、E:not()、E:first-child、、E:nth-child(n)、E:nth-of-type(n)、E:empty、E:checked、E:disabled、E:enabled</li><li>伪元素选择器：E:after/E::after、E:before/E::before</li></ul><h3 id="六css中单位"><a href="#六css中单位" class="headerlink" title="六css中单位"></a>六css中单位</h3><ul><li>长度单位：px、em、百分比</li><li>颜色单位：rgb、代表颜色的单词、十六进制<h3 id="七-规则优先级"><a href="#七-规则优先级" class="headerlink" title="七 规则优先级"></a>七 规则优先级</h3></li><li>在外部添加样式的情况下，id选择器&gt;类选择器、伪类选择器、属性选择器&gt;元素选择器、伪元素选择器</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一-软件的架构&quot;&gt;&lt;a href=&quot;#一-软件的架构&quot; class=&quot;headerlink&quot; title=&quot;一 软件的架构&quot;&gt;&lt;/a&gt;一 软件的架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;C/S架构：(client-server)客户端服务器架构：    &lt;/p&gt;
&lt;o
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="html" scheme="https://jmzc4j.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>Java基础</title>
    <link href="https://jmzc4j.github.io/2019/08/29/Java%E5%9F%BA%E7%A1%80/"/>
    <id>https://jmzc4j.github.io/2019/08/29/Java基础/</id>
    <published>2019-08-29T04:57:13.000Z</published>
    <updated>2019-08-29T05:00:07.854Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><blockquote><p>Java作为强类型语言，将数据类型分成基本类型和引用类型。</p><ul><li>基本数据类型（primitive）：byte、short、int、long、float、double、char、boolean(4类8种)；</li><li>引用数据类型（reference）：array、class、interface（除了基本类型的都是引用类型）；</li><li>作为面向对象的语言，每种基本数据类型都有其对应的包装类型Number(6种)、Character、Boolean；</li></ul></blockquote><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><blockquote><p>和其他语言一样分成顺序、选择和循环结构。</p><ul><li>选择：if-else、switch-case；</li><li>循环：do-while、while、for、foreach；</li></ul></blockquote><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><blockquote><p>面向过程和面向对象</p><ul><li>面向过程：强调功能本身，关注的是如何分步的去完成功能，将方法或函数看做是一个基本单位；此时的程序编写者就是一个执行者；</li><li>面向对象：强调具备该功能的对象，关注的是如何指挥对象去完成功能，将类或者对象看做是一个基本单位；此时的程序编写者就是一个指挥者；</li><li>面向对象编程：就是找寻对象、创建对象、使用对象、维护对象间关系的过程；</li></ul></blockquote><blockquote><p>类和对象</p><ul><li>类：将现实世界中的事物在概念世界的抽象；反映到Java语言中就是一个类或者接口。</li><li>对象：就是那个事物本身，是个实实在在的个体；反映到Java语言中就是类的实例或者接口的具体实现。</li><li>Java中类的组成：类中有属性（Field）、方法（Method）、构造器（Constructor）基础元素，还可以有内部类元素。</li></ul></blockquote><blockquote><p>方法</p><ul><li>方法可以说就是一个最小的封装单位，通常由方法名、参数列表、方法体、返回值类型和访问权限修饰符组成；</li><li>方法重载：一个类中出现方法名相同、参数列表不同的现象；</li><li>方法重写：子父类中出现一模一样的方法的现象（即方法名、参数列表和返回值都一样）；</li><li>重写的方法不能比父类中的方法的出现更多的异常；也不能比父类中的方法的访问权限更严格；静态方法不能重写；</li></ul></blockquote><h3 id="面向对象的三大特性"><a href="#面向对象的三大特性" class="headerlink" title="面向对象的三大特性"></a>面向对象的三大特性</h3><blockquote><p>封装（encapsulation）：隐藏对象的属性和实现细节，并提供对外的访问方式；具体就是使用private私有属性并提供setter和getter方法。</p><ul><li>不可见性：细节不可见；</li><li>安全性：避免了非法数据的产生；</li><li>复用性：不论内部如何变，类始终不变；</li></ul></blockquote><blockquote><p>继承（inheritance）：将多个类中的公共部分提取到一个单独的类中，让这个类和多个类产生了“is a”的关系，将这种关系称之为继承；使用extends表示类或者接口之间的继承关系。</p><ul><li>父类也称之为基类、超类（superclass）；子类也称之为派生类（subclass）；</li><li>一个类有且只能有一个父类；一个父类可以有多个子类（单继承）；</li><li>如果B继承A，C继承B，那么C也间接继承了A（多层继承），java.lang.Object类是继承体系中的根父类；</li><li>可以继承父类中出构造外所有的结构，但因为封装的不可见性，则不能直接访问私有成员；</li><li>子类实例化必先进行父类的初始化，就是说子类构造器中的必然有一个构造器的第一行是super()；</li><li>继承减少了代码的冗余，提高了代码复用性；</li></ul></blockquote><blockquote><p>多态（polymorphism）：同一对象在运行时的不同表现形态；表现形式是父类引用指向子类对象。</p><ul><li>前提：存在继承或实现关系；有方法的重写或方法的实现；</li><li>对属性来说是不存在多态现象的，就是说成员变量看左边；</li><li>对方法来说：编译时看父类的引用，运行时看具体的子类实例（动态绑定）；</li><li>父类不能使用子类中的成员，若想使用则需要向下转型(instanceof)；</li><li>当使用子类重写的方法而不是父类方法的现象称为虚拟方法调用，此时父类中的那个方法称之为虚拟方法（virtual method）；</li></ul></blockquote><blockquote><p>抽象类与接口</p><ul><li>当不要类创建对象时，我们可以使用abstract修饰类，这样的类就是一个抽象类；当不确定方法的具体实现时，可以使用abstract修饰，这样的方法称之为抽象方法；有抽象方法的类必须是抽象类，但抽象类不一定有抽象方法（模板设计模式）；</li><li>接口是类并列的一个结构，使用interface定义；JDK1.8之前，接口中只能有全局常亮和抽象方法；JDK1.8开始可以有静态方法和默认方法且默认方法只能通过接口调用；当默认方法和继承的父类方法一模一样时考虑类优先原则；</li><li>抽象类中通常定义基本功能，接口中定义扩展功能；接口反映的是“like a”的关系，是一种规则，一种可能性；</li></ul></blockquote><blockquote><p>this、super、static、final</p><ul><li>this：当前对象的引用（准确说是this所在的方法的所在类的对象）；</li><li>super：父类对象的引用，和this一样都能用来区分同名成员；</li><li>static：静态，用此修饰的成员变量称之为类变量，同样的用此修饰的成员方法称之为静态方法（类方法）；</li><li>final：提升变量为常量（只能赋值1次）；修饰类则该类不能被继承；修改方法则该方法不能被重写；</li></ul></blockquote><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><blockquote><p>异常就是在程序运行过程中出现语法和逻辑错误之外的其他不正常情况的现象；有抛出和捕捉两种处理方式；</p><ul><li>在异常的继承体系中，Throwable是Exception和Error的顶级父类，在Exception下有一个特殊的RuntimeException子类；</li><li>适当的处理异常能提高程序的健壮性和用户体验；</li></ul></blockquote><blockquote><p>try-catch-finally、throws、throw</p><ul><li>try-catch-finally：捕获并处理异常；try块中是可能出现问题的代码；chatch块中是对问题的解决方式的代码；finally块中是在虚拟机不退出的情况下都会执行的代码；</li><li>throws：抛出一个或多个异常类型，提示方法调用者该方法可能会出现问题；</li><li>throw：手动抛出一个异常对象，如该对象不是RuntimeException类型的子类，则需要显式throws声明；</li></ul></blockquote><blockquote><p>自定义异常</p><ul><li>当我们明确的知道如何解决问题时，通常自定义异常类继承Exception，然后throws该异常;</li><li>当不知道如何解决时，通常自定义类继承RuntimeException，然后好手动抛出一个改异常对象；</li></ul></blockquote><h3 id="常用类与方法"><a href="#常用类与方法" class="headerlink" title="常用类与方法"></a>常用类与方法</h3><blockquote><p>java.lang.Object</p><ul><li>clone()、finalize()、hashCode()、equals()、toString()、wait()、notify()、notifyAll()</li></ul></blockquote><blockquote><p>java.lang.Runtime（一个典型的单例设计模式）</p><ul><li>getRuntime()、gc()、maxMemory()、totalMemory</li></ul></blockquote><blockquote><p>java.lang.System</p><ul><li>currentTimeMillis()、nanoTime()、arraycopy()、exit(0)、gc()、getProperties()</li></ul></blockquote><blockquote><p>java.lang.String</p><ul><li>concat()、join()、split()、subString()</li><li>replace()、replaceFirst()、replaceAll()、compareTo()、equals()、equalsIgnoreCase()、matches()</li><li>length()、charAt()、contains()、indexOf()、lastIndexOf()、startsWith()、endsWith()</li><li>valueOf()、toCharArray()、getBytes()、format()、toUpperCase()、toLowerCase()</li><li>trim()、isEmpty()、intern()</li><li>new String(byte[])、new String(char[])、new String(StringBuilder)</li></ul></blockquote><blockquote><p>java.lang.StringBuffer与java.lang.StringBuilder</p><ul><li>append()、insert()、delete()、deleteCharAt()、setCharAt()、replace()、length()、charAt()、indexOf()、lastIndexOf()、toString()、subString()</li><li>默认容量16，扩容2*16+2</li></ul></blockquote><blockquote><p>java.lang.Math</p><ul><li>Math.PI、Math.E</li><li>abs()、ceil()、floor()、round()、max()、min()、random()</li></ul></blockquote><blockquote><p>java.util.Arrays</p><ul><li>asList()、sort()、binarySearch()、copyOf()、equals()、toString()、fill()</li></ul></blockquote><blockquote><p>java.util.Date与java.sql.Date</p><ul><li>getTime()、setTime()、after()、before()、new Date()、new Date(long)</li><li>new Date(long)、valueOf()</li></ul></blockquote><blockquote><p>java.util.Calendar</p><ul><li>getInstance()、get()set()、add()、before()、after()、常量</li></ul></blockquote><blockquote><p>java.text.SimpleDateformat</p><ul><li>new SimpleDateFormat(String)、format()、parse()</li></ul></blockquote><blockquote><p>java.time.LocalDateTime</p><ul><li>now()、of()、getXxx()、plusXxx()、minusXxx()、withXxx()</li></ul></blockquote><blockquote><p>java.time.Instant</p><ul><li>now()、plus()、minus()</li></ul></blockquote><blockquote><p>java.time.format.DateTimeFormatter</p><ul><li>DateTimeFormatter.ISO_LOCAL_DATE_TIME</li><li>ofPattern(String)、format()、parse()</li></ul></blockquote><blockquote><p>java.lang.Integer</p><ul><li>valueOf()、compare()、compareTo()、parseInt()、xxxValue()、toString()</li></ul></blockquote><blockquote><p>java.math.BigDecimal</p><ul><li>divide(BigDecimal divisor, int scale, int roundingMode)</li></ul></blockquote><blockquote><p>java.security,].MessageDigest(md5,sha-256)</p><ul><li>getInstance(String algorithm)、digest(byte[])</li></ul></blockquote><blockquote><p>java.util.Base64</p><ul><li>getDecode()、getEncode()</li><li>decode()、encode()</li></ul></blockquote><h3 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h3><blockquote><p>程序、进程和线程</p><ul><li>程序：为实现某一功能，使用编程语言编写的一段静态代码或者是一组指令的集合；</li><li>进程：运行起来的程序，是资源分配的基本单位；</li><li>线程：程序中的一条执行路径，是程序执行的基本单位；</li><li>如果一个程序在同一时间可以并行的执行多个线程，那个称该程序为多线程程序；</li></ul></blockquote><blockquote><p>创建线程的方式</p><ul><li>extends Thread：覆盖run()</li><li>implements Runbale：覆盖run()</li><li>implements Callable-&gt;FutureTask：覆盖call()</li><li>Executors-&gt;ThreadPoolExecutor-&gt;submit()/execute()/shutdown()</li></ul></blockquote><blockquote><p>线程中常用方法</p><ul><li>currentThread()、getName()、setName()、setPriority()、setDaemon()</li><li>start()、sleep()、join()、yield()、interrupt()</li></ul></blockquote><blockquote><p>线程状态</p><ul><li>新建（new）</li><li>就绪（start、yield、notify）</li><li>运行（cpu分配了执行权）</li><li>阻塞（sleep、join、等待同步锁、wait）</li><li>死亡（run结束、出现异常、interrupt）</li></ul></blockquote><blockquote><p>出现多线程问题的原因</p><ul><li>多线程环境、有共享数据且有多条语句操作共享数据</li></ul></blockquote><blockquote><p>线程同步</p><ul><li>syncronized同步代码块：锁对象任意，多个线程共用同一把锁；</li><li>syncnizzed同步方法：成员方法锁为this、类方法锁为clazz；</li><li>reentrantLock锁：lock(),unlock()</li><li>lock.newCondition()-&gt; await(),signal()</li></ul></blockquote><blockquote><p>线程通信</p><ul><li>wait、notify</li><li>await、signal</li></ul></blockquote><h3 id="注解和枚举"><a href="#注解和枚举" class="headerlink" title="注解和枚举"></a>注解和枚举</h3><blockquote><p>注解可以理解为源代码的补充代码，与反射技术配合使用</p><ul><li>@interface：定义注解</li><li>元注解：（描述注解的注解）<br>target：定义使用注解的元素类型，使用ElementType枚举类<br>retention：定义注解的生命周期，使用RetentionPolicy枚举类<br>inherited：<br>document：<br>repeatable：</li></ul></blockquote><blockquote><p>枚举类就是定义有限个公共的全局对象常量的类。</p><ul><li>enum定义枚举类，最直接父类是Enum；当一个枚举类中只有一个常亮时该枚举类就是一个单例的；</li></ul></blockquote><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><blockquote><p>Collection接口为单列集合的根接口，其子接口有List与Set。</p></blockquote><blockquote><p>List接口存储有序，元素可重复；实现类有ArrayList、LinkedList、Vector、Stack。</p><ul><li>ArrayList和Vector底层数据结构是数组，数组默认长度是10，扩容方式前者1.5倍后者2倍；查询快，插入和删除慢；</li><li>LinkedList：底层数据结果是双向列表，查询慢，插入和删除快；</li></ul></blockquote><blockquote><p>Set接口存储无序，元素不可重复；实现类有HashSet、LinkedHashSet、TreeSet。</p><ul><li>HashSet：底层使用HashMap，即数组+链表+红黑树(1.8)的结构,默认容量16，加载因子0.75，临时容量12；当链表长度超过8，容量超过64则转换为红黑树存储。大概原理取得元素hashCode，通过散列算法计算元素位置；当该位置无元素直接添加，如果有元素那么要判断hashcode和equals的结果，hashcode和equals完全一样则不能添加；</li><li>LinkedHashSet：底层在HashSet的基础上又多了一个双向链表来记录存储数据的顺序，所有取出和存储顺序是一致的；</li><li>TreeSet：底层是红黑树，通过compareTo()或者compare()方法来确定元素位置。</li></ul></blockquote><blockquote><p>Collection接口方法</p><ul><li>add、addAll、clear、size、isEmpty、hashcode</li><li>remove、removeALl、contains、containsAll、retainALl、equals</li><li>toArray，iterator</li></ul></blockquote><blockquote><p>ArrayList特有方法</p><ul><li>add(int,E)、get(int)、set(int,E)、remove(int)、subList(int,int)</li></ul></blockquote><blockquote><p>Map是双列集合的根接口，其实现类有HashMap、LinkedHashMap、TreeMap、Hashtable、Propeties</p><ul><li>以键值对的方式存储元素，先将键值对存储到entry中然后将entry存到Map中；</li><li>存储无序，元素不可重复，因为key是Set、value是Collection；</li></ul></blockquote><blockquote><p>Map的方法</p><ul><li>put、get、values、keySet、entrySet、size、isEmpty、remove、containsKey、containsValue、clear</li></ul></blockquote><h3 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h3><blockquote><p>泛型是参数化类型，就是类型的标记；实例化或者调用方法时需要明确具体类型；</p><ul><li>可以用在类、接口、方法上；泛型方法可以是静态的；泛型方法的泛型类型不需要和类或接口中的泛型一致；</li><li>通配符：？，？extends G，？super G；不能做写操作，但可以做读操作；</li></ul></blockquote><h3 id="文件和IO流"><a href="#文件和IO流" class="headerlink" title="文件和IO流"></a>文件和IO流</h3><blockquote><p>将文件系统抽象成File类，通过该类可以进行文件或目录的创建、删除、属性查看、目录内容查看等操作。</p></blockquote><blockquote><p>java.io.File中的常用方法</p><ul><li>File.separator</li><li>isFile()、isDirectory()、exists()、canRead()、canWrite()、isHidden()</li><li>createNewFile()、mkdirs()、delete()、getParent() 、getName()、getAbsolutePath()</li><li>list()、listFiles()、lastModified()、length()</li></ul></blockquote><blockquote><p>io流分类</p><ul><li>按数据单位分为字节流和字符流</li><li>按流的流向分为输入流和输出流</li><li>按流的角色分为节点流（直接作用于文件的流）和处理流（对文件流或其他流的处理）</li></ul></blockquote><blockquote></blockquote><h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><h3 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h3><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h3 id="Java8函数式编程"><a href="#Java8函数式编程" class="headerlink" title="Java8函数式编程"></a>Java8函数式编程</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Java作为强类型语言，将数据类型分成基本类型和引用类型。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本数据类型
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="java" scheme="https://jmzc4j.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse常用配置</title>
    <link href="https://jmzc4j.github.io/2019/08/29/Eclipse%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/29/Eclipse常用配置/</id>
    <published>2019-08-28T16:48:08.000Z</published>
    <updated>2019-08-28T19:47:56.006Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Eclispe常用配置"><a href="#Eclispe常用配置" class="headerlink" title="Eclispe常用配置"></a>Eclispe常用配置</h3><ol><li><p>Window-&gt;Preferences-&gt;General-&gt;勾选”show heap status”;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Appearance-&gt;取消勾选”show most recently used tabs”;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Appearance-&gt;Colors and Fonts-&gt;Basic-&gt;Text Font-&gt;Edit-&gt;调整字体大小;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Content Types-&gt;Java Properties File-&gt;Default Encoding-&gt;修改为UTF-8-&gt;Update;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;Text Editors-&gt;Background color-&gt;背景色调整为RGB(199,237,204);</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;Text Editors-&gt;Spelling-&gt;取消勾选”enable spell checking”;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Project Natures-&gt;取消勾选”Automatically detect missing …”;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Sartup and Shutdown-&gt;仅保留git UI;</p></li><li><p>Window-&gt;Preferences-&gt;General-&gt;Workspace-&gt;Text file encoding-&gt;修改为UTF-8;</p></li><li><p>Window-&gt;Preferences-&gt;Install/Update-&gt;Automatic Updates-&gt;取消勾选”Automatically find new …”;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates-&gt;Comments-&gt;Types-&gt;修改为<code>@author ${user}  &lt;mailto:jmzc_top@aliyun.com&gt;</code>;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates-&gt;Code-&gt;去掉注释部分;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Formatter-&gt;创建一个新的myself模板-&gt;然后去掉Comments选择卡中的JavaDoc和block comment格式化;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Editors-&gt;Content Assist-&gt;Auto activation triggers for java-&gt;修改为<code>abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ.</code>;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Editors-&gt;Content Assist-&gt;Advanced-&gt;取消勾选”Java Proposals(Code Recommenders)”;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Editors-&gt;Templates-&gt;可以修改预定义模板或者新建模板;</p></li><li><p>Window-&gt;Preferences-&gt;Java-&gt;Installed JREs-&gt;修改JRE为安装的JDK;</p></li><li><p>Window-&gt;Preferences-&gt;JavaScript-&gt;Code Style-&gt;Formatter-&gt;创建一个新的myself模板-&gt;然后去掉Comments选择卡中的JavaDoc和block comment格式化;</p></li><li><p>Window-&gt;Preferences-&gt;JavaScript-&gt;Editors-&gt;Content Assist-&gt;Auto activation triggers for javascript-&gt;修改为<code>abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ.</code>;</p></li><li><p>Window-&gt;Preferences-&gt;Maven-&gt;Installings-&gt;添加外部的maven安装目录-&gt;进行勾选;</p></li><li><p>Window-&gt;Preferences-&gt;Maven-&gt;User Settings-&gt;User Settings选择外部settings文件路径;</p></li><li><p>Window-&gt;Preferences-&gt;Server-&gt;Runtime Environment-&gt;Add-&gt;添加外部tomcat;</p></li><li><p>Window-&gt;Preferences-&gt;Web-&gt;JSP Files-&gt;修改Encoding为UTF-8;</p></li></ol><h3 id="sts插件-老版本地址推演"><a href="#sts插件-老版本地址推演" class="headerlink" title="sts插件(老版本地址推演)"></a>sts插件(老版本地址推演)</h3><ol><li><p>在<a href="https://spring.io/tools3/sts/all" target="_blank" rel="noopener">sts插件官网</a>找到eclipse4.9.0的下载地址,如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">分解：</span><br><span class="line">https://download.springsource.com/release/TOOLS/update (保留1)</span><br><span class="line">/3.9.9.RELEASE/e4.9</span><br><span class="line">/springsource-tool-suite (保留4)</span><br><span class="line">-3.9.9.RELEASE-e4.9.0</span><br><span class="line">-updatesite.zip (保留6)</span><br></pre></td></tr></table></figure></li><li><p>在<a href="https://spring.io/tools3/sts/legacy" target="_blank" rel="noopener">STS官网</a>找到对应的Eclipse的版本的下载地址,如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">分解：</span><br><span class="line">https://download.springsource.com/release/STS</span><br><span class="line">/3.9.6.RELEASE (保留2)</span><br><span class="line">/dist</span><br><span class="line">/e4.9 (保留3)</span><br><span class="line">/spring-tool-suite</span><br><span class="line">-3.9.6.RELEASE-e4.9.0 (保留5)</span><br><span class="line">-win32-x86_64.zip</span><br></pre></td></tr></table></figure></li><li><p>推算sts插件其他版本的地址，只需知道STS的下载地址，然后安装保留序号进行拼接即可；如需要下载eclispe4.7.3a的sts插件：</p></li></ol><ul><li>STS下载地址：<a href="https://download.springsource.com/release/STS/3.9.4.RELEASE/dist/e4.7/spring-tool-suite-3.9.4.RELEASE-e4.7.3a-win32-x86_64.zip" target="_blank" rel="noopener">https://download.springsource.com/release/STS/3.9.4.RELEASE/dist/e4.7/spring-tool-suite-3.9.4.RELEASE-e4.7.3a-win32-x86_64.zip</a></li><li>按照上面的推导规则，得到sts插件的离线下载包地址为：<br><a href="https://download.springsource.com/release/TOOLS/update/3.9.4.RELEASE/e4.7/springsource-tool-suite-3.9.4.RELEASE-e4.7.3a-updatesite.zip" target="_blank" rel="noopener">https://download.springsource.com/release/TOOLS/update/3.9.4.RELEASE/e4.7/springsource-tool-suite-3.9.4.RELEASE-e4.7.3a-updatesite.zip</a></li></ul><ol start="4"><li>下载安装</li></ol><ul><li>打开eclispe-&gt;Help-&gt;Install New Software-&gt;Add-&gt;Achieve-&gt;选择下载的压缩包-&gt;OK-&gt;选择带有IDE的4个进行安装（取消勾选下面的站点升级）</li></ul><h3 id="安装lombok"><a href="#安装lombok" class="headerlink" title="安装lombok"></a>安装lombok</h3><ul><li><a href="https://www.projectlombok.org/" target="_blank" rel="noopener">官网下载</a>lombok.jar或者通过maven下载；</li><li>双击jar，在出现的界面选择eclispe根目录中的eclispe.exe，再点击install/update即可;</li></ul><h3 id="uml插件"><a href="#uml插件" class="headerlink" title="uml插件"></a>uml插件</h3><ul><li>planUML安装<ol><li>官网地址：<a href="http://plantuml.com/zh" target="_blank" rel="noopener">http://plantuml.com/zh</a>;</li><li>Help-&gt;Install New Software-&gt;Add-&gt;添加地址(<a href="http://hallvard.github.io/plantuml" target="_blank" rel="noopener">http://hallvard.github.io/plantuml</a> )-&gt;全部安装即可;</li><li><a href="https://www.graphviz.org/download/" target="_blank" rel="noopener">下载Graphviz</a>并安装;</li><li>Window-&gt;Preferences-&gt;PlantUML-&gt;配置dot.exe的路径;</li><li>Window-&gt;Show View-&gt;PlanUML;</li></ol></li><li>AmaterasUML安装<ol><li>Help-&gt;Install New Software-&gt;Add-&gt;添加地址(<a href="https://takezoe.github.io/amateras-update-site/)-&gt;全部安装即可" target="_blank" rel="noopener">https://takezoe.github.io/amateras-update-site/)-&gt;全部安装即可</a>;</li></ol></li></ul><h3 id="eclipse手动安装插件"><a href="#eclipse手动安装插件" class="headerlink" title="eclipse手动安装插件"></a>eclipse手动安装插件</h3><ol><li>在eclipse根目录下建文件夹MyPlugins;</li><li>下载插件并解压得到包含features和plugins的文件夹XXX;</li><li>完成复制和建立文件夹的操作之后，如${eclipse_Home}\MyPlugins\XXX\eclipse\features和..\plugins文件夹;</li><li>在eclipse_Home下建links文件夹,并建立一个p1_xxx.link文件,内容为<code>path=${eclipse_Home}/MyPlugins/xxx</code><ul><li>注意:<ul><li>路径中是”/“或者”\“  而不是”&quot; ;</li><li>${eclipse_Home}换成实际绝对地址：如D:\eclipse\MyPlugins\quantum303;</li><li>link目录下的文件eclipse都要读入,小心！;</li><li>path下面应该有eclipse文件夹，而不是将path设置成eclipse文件夹;</li><li>让path下面有plugins和features这两个目录;</li></ul></li></ul></li><li>删除${eclipse_Home}\configuration中的org.eclipse.update目录;</li><li>重启eclipse,ok.  其实，myeclipse的插件安装就是如此操作的;</li></ol><h3 id="eclispe注释模板"><a href="#eclispe注释模板" class="headerlink" title="eclispe注释模板"></a>eclispe注释模板</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">文件(Files)注释标签：</span><br><span class="line">/**  </span><br><span class="line">* @Title: $&#123;file_name&#125;</span><br><span class="line">* @Package $&#123;package_name&#125;</span><br><span class="line">* @Description: $&#123;todo&#125;(用一句话描述该文件做什么)</span><br><span class="line">* @author A18ccms A18ccms_gmail_com  </span><br><span class="line">* @date $&#123;date&#125; $&#123;time&#125;</span><br><span class="line">* @version V1.0  </span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">类型(Types)注释标签（类的注释）：</span><br><span class="line">/**</span><br><span class="line">* @ClassName: $&#123;type_name&#125;</span><br><span class="line">* @Description: $&#123;todo&#125;(这里用一句话描述这个类的作用)</span><br><span class="line">* @author A18ccms a18ccms_gmail_com</span><br><span class="line">* @date $&#123;date&#125; $&#123;time&#125;</span><br><span class="line">*</span><br><span class="line">* $&#123;tags&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">字段(Fields)注释标签：</span><br><span class="line">/**</span><br><span class="line">* @Fields $&#123;field&#125; : $&#123;todo&#125;(用一句话描述这个变量表示什么)</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">构造函数标签：</span><br><span class="line">/**</span><br><span class="line">* &lt;p&gt;Title: &lt;/p&gt;</span><br><span class="line">* &lt;p&gt;Description: &lt;/p&gt;</span><br><span class="line">* $&#123;tags&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">方法(Constructor &amp; Methods)标签：</span><br><span class="line">/**</span><br><span class="line">* @Title: $&#123;enclosing_method&#125;</span><br><span class="line">* @Description: $&#123;todo&#125;(这里用一句话描述这个方法的作用)</span><br><span class="line">* @param $&#123;tags&#125;    设定文件</span><br><span class="line">* @return $&#123;return_type&#125;    返回类型</span><br><span class="line">* @throws</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">覆盖方法(Overriding Methods)标签：</span><br><span class="line">/* (非 Javadoc)</span><br><span class="line">* &lt;p&gt;Title: $&#123;enclosing_method&#125;&lt;/p&gt;</span><br><span class="line">* &lt;p&gt;Description: &lt;/p&gt;</span><br><span class="line">* $&#123;tags&#125;</span><br><span class="line">* $&#123;see_to_overridden&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">代表方法(Delegate Methods)标签：</span><br><span class="line">/**</span><br><span class="line">* $&#123;tags&#125;</span><br><span class="line">* $&#123;see_to_target&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">getter方法标签：</span><br><span class="line">/**</span><br><span class="line">* @return $&#123;bare_field_name&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">setter方法标签：</span><br><span class="line">/**</span><br><span class="line">* @param $&#123;param&#125; 要设置的 $&#123;bare_field_name&#125;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Eclispe常用配置&quot;&gt;&lt;a href=&quot;#Eclispe常用配置&quot; class=&quot;headerlink&quot; title=&quot;Eclispe常用配置&quot;&gt;&lt;/a&gt;Eclispe常用配置&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Window-&amp;gt;Preferences-&amp;g
      
    
    </summary>
    
      <category term="IDE工具" scheme="https://jmzc4j.github.io/categories/IDE%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="eclipse" scheme="https://jmzc4j.github.io/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>LogBack配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/LogBack%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/LogBack配置/</id>
    <published>2019-08-28T10:51:03.000Z</published>
    <updated>2019-08-28T11:44:12.823Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><p>-Logback是由log4j创始人设计的另一个开源日志组件,[官方网站] (<a href="http://logback.qos.ch" target="_blank" rel="noopener">http://logback.qos.ch</a>);</p><ul><li>它当前分为下面几个模块：</li></ul><ol><li>logback-core：其它两个模块的基础模块;</li><li>logback-classic：它是log4j的一个改良版本，同时它完整实现了slf4jAPI使你可以很方便地更换成其它日志系统如log4j或JDK14 Logging;</li><li>logback-access：访问模块与Servlet容器集成提供通过Http来访问日志的功能;</li></ol><h3 id="why-use-it"><a href="#why-use-it" class="headerlink" title="why use it"></a>why use it</h3><ul><li>更快的实现：Logback的内核重写了，在一些关键执行路径上性能提升10倍以上。而且logback不仅性能提升了，初始化内存加载也更小了；</li><li>非常充分的测试：Logback经过了几年，数不清小时的测试。Logback的测试完全不同级别的；</li><li>Logback-classic非常自然实现了SLF4j，在使用SLF4j中，你都感觉不到logback-classic；</li><li>非常充分的文档：官方网站有两百多页的文档；</li><li>自动重新加载配置文件：当配置文件修改了，Logback-classic能自动重新加载配置文件。扫描过程快且安全，它并不需要另外创建一个扫描线程；</li><li>Filters（过滤器）：在log4j，只有降低日志级别，不过这样会打出大量的日志，会影响应用性能。在Logback，你可以继续保持那个日志级别；</li><li>自动压缩已经打出来的log：RollingFileAppender在产生新文件的时候，会自动异步压缩已经打出来的日志文件。</li><li>自动去除旧的日志文件：设置TimeBasedRollingPolicy或者SizeAndTimeBasedFNATP的maxHistory属性，你可以控制已经产生日志文件的最大数量；</li></ul><h3 id="logback-xml"><a href="#logback-xml" class="headerlink" title="logback.xml"></a>logback.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。</span></span><br><span class="line"><span class="comment">scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</span></span><br><span class="line"><span class="comment">de<span class="doctag">bug:</span> 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">"true"</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"60 seconds"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上下文名称，用于区分不同应用程序的记录 默认default --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">contextName</span>&gt;</span>default<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_HOME"</span> <span class="attr">value</span>=<span class="string">"./log"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义日志布局的转换样式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--格式化输出：%d表示日期，%p优先级，%c类全限定名，%M方法名，%L行号，%m日志信息，%n换行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"layout_pattern"</span> <span class="attr">value</span>=<span class="string">"%d&#123;yyyy-MM-dd HH:mm:ss&#125;[%p][%c][%M][%L] -&gt; %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"layout_pattern2"</span> <span class="attr">value</span>=<span class="string">"%date [%thread] %-5level %logger&#123;36&#125; [%line] - %msg%n"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义要保存的最大归档文件数量，异步删除旧文件 （需要结合滚动pattern具体分析） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logFile_period"</span> <span class="attr">value</span>=<span class="string">"30"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义单个日志文件的最大为10M 超出此大小则生成新文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logFile_maxSize"</span> <span class="attr">value</span>=<span class="string">"10MB"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 邮件参数设置 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义邮件服务器地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"smtpHost"</span> <span class="attr">value</span>=<span class="string">"smtp.163.com"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- smtp端口 ，默认值25 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"smtpPort"</span> <span class="attr">value</span>=<span class="string">"25"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 发件人用户名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"jmzc_top"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 发件人授权码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"grant163tojmzc"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 安全连接 默认false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"SSL"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 收件人邮箱 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"email_to"</span> <span class="attr">value</span>=<span class="string">"jmzc_top@aliyun.com"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 发件人邮箱 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"email_from"</span> <span class="attr">value</span>=<span class="string">"jmzc_top@163.com"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 主题 默认%logger&#123;20&#125; - %m --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"email_subject"</span> <span class="attr">value</span>=<span class="string">"【Error】: %logger"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 输出日志到控制台 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;layout_pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 过滤器，记录&gt;=DEBUG级别的日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span>&gt;</span>DEBUG<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 输入日志到文件 DEBUG级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"FileDebug"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;LOG_HOME&#125;/debug.%d&#123;yyyyMMdd&#125;.zip<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MaxHistory</span>&gt;</span>$&#123;logFile_period&#125;<span class="tag">&lt;/<span class="name">MaxHistory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;layout_pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">triggeringPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MaxFileSize</span>&gt;</span>$&#123;logFile_maxSize&#125;<span class="tag">&lt;/<span class="name">MaxFileSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">triggeringPolicy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span>&gt;</span>DEBUG<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 过滤器，只记录DEBUG级别的日志 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;filter class="ch.qos.logback.classic.filter.LevelFilter"&gt;</span></span><br><span class="line"><span class="comment">&lt;level&gt;DEBUG&lt;/level&gt;</span></span><br><span class="line"><span class="comment">&lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span></span><br><span class="line"><span class="comment">&lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span></span><br><span class="line"><span class="comment">&lt;/filter&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 输入日志到文件 ERROR级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"FileError"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置文件滚动的样式 %d&#123;yyyyMMdd&#125;表示每天滚动 或者达到最大文件大小后滚动 .gz | .zip | .log | .txt --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;LOG_HOME&#125;/error.%d&#123;yyyyMMdd&#125;.zip<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MaxHistory</span>&gt;</span>$&#123;logFile_period&#125;<span class="tag">&lt;/<span class="name">MaxHistory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.encoder.PatternLayoutEncoder"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;layout_pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">triggeringPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MaxFileSize</span>&gt;</span>$&#123;logFile_maxSize&#125;<span class="tag">&lt;/<span class="name">MaxFileSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">triggeringPolicy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 输出日志到邮件 janino.jar和mail.jar --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"Email"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.net.SMTPAppender"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 基于标记和日志等级发送邮件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">evaluator</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.boolex.JaninoEventEvaluator"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">expression</span>&gt;</span></span><br><span class="line">(level &gt; WARN &amp;amp;&amp;amp; null != throwable)||(marker != null &amp;amp;&amp;amp; marker.contains("DEVELOP"))</span><br><span class="line"><span class="tag">&lt;/<span class="name">expression</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">evaluator</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 一个邮件只包含一个日志条目 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cyclicBufferTracker</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.spi.CyclicBufferTracker"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bufferSize</span>&gt;</span>1<span class="tag">&lt;/<span class="name">bufferSize</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cyclicBufferTracker</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置同步发送，异步不好用？？？ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">asynchronousSending</span>&gt;</span>false<span class="tag">&lt;/<span class="name">asynchronousSending</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">smtpHost</span>&gt;</span>$&#123;smtpHost&#125;<span class="tag">&lt;/<span class="name">smtpHost</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">smtpPort</span>&gt;</span>$&#123;smtpPort&#125;<span class="tag">&lt;/<span class="name">smtpPort</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SSL</span>&gt;</span>$&#123;SSL&#125;<span class="tag">&lt;/<span class="name">SSL</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>$&#123;username&#125;<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>$&#123;password&#125;<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>$&#123;email_to&#125;<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>$&#123;email_from&#125;<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">subject</span>&gt;</span>$&#123;email_subject&#125;<span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>$&#123;layout_pattern&#125;<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- root是所有logger的祖先 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 日志输出级别 TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"Console"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;appender-ref ref="FileDebug" /&gt;</span></span><br><span class="line"><span class="comment">&lt;appender-ref ref="FileError" /&gt;</span></span><br><span class="line"><span class="comment">&lt;appender-ref ref="Email" /&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- show parameters for hibernate sql 专为 Hibernate 定制 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.type.descriptor.sql.BasicBinder"</span> <span class="attr">level</span>=<span class="string">"TRACE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.type.descriptor.sql.BasicExtractor"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.SQL"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.engine.QueryParameters"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.engine.query.HQLQueryPlan"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!--myibatis log configure--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.apache.ibatis"</span> <span class="attr">level</span>=<span class="string">"TRACE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"java.sql.Connection"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"java.sql.Statement"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"java.sql.PreparedStatement"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;p&gt;-Logback是由log4j创始人设计的另一个开源日志组件,[官方网站] (&lt;a href=&quot;ht
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="logback" scheme="https://jmzc4j.github.io/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>Log4j配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Log4j%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Log4j配置/</id>
    <published>2019-08-28T10:49:24.000Z</published>
    <updated>2019-08-28T11:56:32.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>Log4j是Apache下的一款开源的日志框架;在项目中，我们会结合slf4j和log4j一起使用;</li><li>Log4j提供了简单的API调用，强大的日志格式定义以及灵活的扩展性。我们可以自己定义Appender来满足我们对于日志输出的需求;</li><li>Log4j有三个主要的组件：Loggers(记录器)，Appenders(输出源)和Layouts(布局);</li></ul><h3 id="why-use-it"><a href="#why-use-it" class="headerlink" title="why use it"></a>why use it</h3><ul><li>我们在系统中对于记录日志的需求并不单纯。首先，我们希望日志要能持久化到磁盘，最基本的就是要能够保存到文件中；其次，我们希望在开发和生产环境中记录的日志并不相同，明显开发环境的日志记录会更多方便调试，但放到生产环境下大量的日志很容易会撑爆服务器，因此在生产环境我们希望只记录重要信息。</li><li>基于不单纯的目的，System.out.println是直接不能满足我们的要求，因此抛弃它，选择功能更强的日志框架。而log4j是apache下一款著名的开源日志框架，log4j满足上面的一切需求。</li><li>记录日志的框架并不仅仅只有log4j，比较有名的还有logback等，现在比较火的SpringBoot默认集成的日志就是logback。不管哪种日志框架，一般都能够实现日志的持久化功能。</li></ul><h3 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h3><p>Loggers组件在此系统中被分为五个级别：DEBUG、INFO、WARN、ERROR和FATAL。这五个级别是有顺序的，DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，分别用来指定这条日志信息的重要程度，明白这一点很重要，Log4j有一个规则：只输出级别不低于设定级别的日志信息，假设Loggers级别设定为INFO，则INFO、WARN、ERROR和FATAL级别的日志信息都会输出，而级别比INFO低的DEBUG则不会输出。</p><h3 id="输出格式说明："><a href="#输出格式说明：" class="headerlink" title="输出格式说明："></a>输出格式说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">%p：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。</span><br><span class="line">%d：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d&#123;yyyy/MM/dd HH:mm:ss,SSS&#125;。</span><br><span class="line">%r：输出自应用程序启动到输出该log信息耗费的毫秒数。</span><br><span class="line">%t：输出产生该日志事件的线程名。</span><br><span class="line">%l：输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名以及在代码中的行数。例如：test.TestLog4j.main(TestLog4j.java:10)。</span><br><span class="line">%c：输出日志信息所属的类目，通常就是所在类的全名。</span><br><span class="line">%M：输出产生日志信息的方法名。</span><br><span class="line">%F：输出日志消息产生时所在的文件名称。</span><br><span class="line">%L:：输出代码中的行号。</span><br><span class="line">%m:：输出代码中指定的具体日志信息。</span><br><span class="line">%n：输出一个回车换行符，Windows平台为&quot;rn&quot;，Unix平台为&quot;n&quot;。</span><br><span class="line">%x：输出和当前线程相关联的NDC(嵌套诊断环境)，尤其用到像java servlets这样的多客户多线程的应用中。</span><br><span class="line">%%：输出一个&quot;%&quot;字符。</span><br><span class="line">另外，还可以在%与格式字符之间加上修饰符来控制其最小长度、最大长度、和文本的对齐方式。如：</span><br><span class="line">1) c：指定输出category的名称，最小的长度是20，如果category的名称长度小于20的话，默认的情况下右对齐。</span><br><span class="line">2)%-20c：&quot;-&quot;号表示左对齐。</span><br><span class="line">3)%.30c：指定输出category的名称，最大的长度是30，如果category的名称长度大于30的话，就会将左边多出的字符截掉，但小于30的话也不会补空格。</span><br></pre></td></tr></table></figure><h3 id="log4j-xml"><a href="#log4j-xml" class="headerlink" title="log4j.xml"></a>log4j.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE log4j:configuration PUBLIC "-//log4j/log4j Configuration//EN" "log4j.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--输出到控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"consoleAppender"</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"Threshold"</span> <span class="attr">value</span>=<span class="string">"DEBUG"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.PatternLayout"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ConversionPattern"</span> <span class="attr">value</span>=<span class="string">"[%d&#123;HH:mm:ss:SSS&#125;] [%p] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到文件（info）--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将生成“info.log.2014-06-11”这样的日志文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileAppenderInfo"</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"File"</span> <span class="attr">value</span>=<span class="string">"$&#123;user.home&#125;/logs/website/info.log"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"DatePattern"</span> <span class="attr">value</span>=<span class="string">".yyyy-MM-dd"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.PatternLayout"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ConversionPattern"</span> <span class="attr">value</span>=<span class="string">"[%d&#123;HH:mm:ss:SSS&#125;] [%p] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMin"</span> <span class="attr">value</span>=<span class="string">"INFO"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMax"</span> <span class="attr">value</span>=<span class="string">"INFO"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到文件（warn）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileAppenderWarn"</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"File"</span> <span class="attr">value</span>=<span class="string">"$&#123;user.home&#125;/logs/website/warn.log"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"DatePattern"</span> <span class="attr">value</span>=<span class="string">".yyyy-MM-dd"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.PatternLayout"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ConversionPattern"</span> <span class="attr">value</span>=<span class="string">"[%d&#123;HH:mm:ss:SSS&#125;] [%p] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMin"</span> <span class="attr">value</span>=<span class="string">"WARN"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMax"</span> <span class="attr">value</span>=<span class="string">"WARN"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到文件（error）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileAppenderError"</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.DailyRollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"File"</span> <span class="attr">value</span>=<span class="string">"$&#123;user.home&#125;/logs/website/error.log"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"DatePattern"</span> <span class="attr">value</span>=<span class="string">".yyyy-MM-dd"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.PatternLayout"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ConversionPattern"</span> <span class="attr">value</span>=<span class="string">"[%d&#123;HH:mm:ss:SSS&#125;] [%p] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"org.apache.log4j.varia.LevelRangeFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMin"</span> <span class="attr">value</span>=<span class="string">"ERROR"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"LevelMax"</span> <span class="attr">value</span>=<span class="string">"ERROR"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--屏蔽所有org.springframework.*输出的Debug（及以下）信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">"INFO"</span>&gt;</span><span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">"ALL"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"consoleAppender"</span> /&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--    &lt;appender-ref ref="fileAppenderInfo" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;appender-ref ref="fileAppenderWarn" /&gt;</span></span><br><span class="line"><span class="comment">        &lt;appender-ref ref="fileAppenderError" /&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="log4j-properties"><a href="#log4j-properties" class="headerlink" title="log4j.properties"></a>log4j.properties</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#默认输出路径</span><br><span class="line">log4j.rootLogger=info,stdout,logfile,busi1</span><br><span class="line">log4j.appender.logfile=org.apache.log4j.FileAppender</span><br><span class="line">log4j.appender.logfile.File=logs/cmsmgr.log</span><br><span class="line">log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.logfile.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %F %p %m%n</span><br><span class="line"></span><br><span class="line">log4j.logger.com.ibatis=INFO</span><br><span class="line">log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=INFO</span><br><span class="line">log4j.logger.com.ibatis.common.jdbc.ScriptRunner=INFO</span><br><span class="line">log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=INFO</span><br><span class="line">log4j.logger.java.sql.Connection=INFO</span><br><span class="line">log4j.logger.java.sql.Statement=INFO</span><br><span class="line">log4j.logger.java.sql.PreparedStatement=INFO</span><br><span class="line">#输出到控制台</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.Threshold=INFO</span><br><span class="line">log4j.appender.stdout.ImmediateFlush=true</span><br><span class="line">log4j.appender.stdout.Target=System.err</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span><br><span class="line">#输出到busi1</span><br><span class="line">log4j.logger.busi1= info, busi1</span><br><span class="line">#每天产生一个日志文件</span><br><span class="line">log4j.appender.busi1=org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">#日志文件格式</span><br><span class="line">log4j.appender.busi1.DatePattern=&apos;.&apos;yyyy-MM-dd-HH</span><br><span class="line">#日志路径</span><br><span class="line">log4j.appender.busi1.File=logs/busi1.log</span><br><span class="line">#最低输出日志级别</span><br><span class="line">log4j.appender.busi1.Threshold = INFO</span><br><span class="line">#输出的布局样式</span><br><span class="line">log4j.appender.busi1.layout=org.apache.log4j.PatternLayout</span><br><span class="line">#自定义输出哪些信息</span><br><span class="line">log4j.appender.busi1.layout.ConversionPattern=[%d&#123;yyyy-MM-dd HH:mm:ss&#125;] %l%t %m%n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#输出到busi</span><br><span class="line">log4j.logger.busi= info, busi</span><br><span class="line">log4j.appender.busi=org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.busi.File=logs/busi.log</span><br><span class="line">log4j.appender.busi.Threshold = INFO</span><br><span class="line">log4j.appender.busi.DatePattern=&apos;.&apos;yyyy-MM-dd-HH</span><br><span class="line">log4j.appender.busi.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.busi.layout.ConversionPattern=[%d&#123;yyyy-MM-dd HH:mm:ss&#125;] %l%t %m%n</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Log4j是Apache下的一款开源的日志框架;在项目中，我们会结合slf4j和log4
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="log4j" scheme="https://jmzc4j.github.io/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis逆向工程配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Mybatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Mybatis逆向工程配置/</id>
    <published>2019-08-28T10:46:27.000Z</published>
    <updated>2019-08-28T12:07:45.462Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>mybatis逆向工程，就是mybatis会根据我们设计好的数据表，自动生成pojo、mapper以及mapper.xml；</li><li>官方文档：<a href="http://www.mybatis.org/generator/" target="_blank" rel="noopener">generator</a>;</li></ul><h3 id="generateConfig-xml"><a href="#generateConfig-xml" class="headerlink" title="generateConfig.xml"></a>generateConfig.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入属性配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"generatorConfig.properties"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--指定特定数据库的jdbc驱动jar包的位置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"$&#123;db.driverLocation&#125;"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- targetRuntime="MyBatis3"：选择运行的mybatis版本 ;如果你希望不生成和Example查询有关的内容,可以使用MyBatis3Simple--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- defaultModelType="flat" :这种类型的model会为每个表生成唯一的一个类，这个类中会包含表中所有的字段 ;默认值conditional --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"default"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span></span></span><br><span class="line"><span class="tag"><span class="attr">defaultModelType</span>=<span class="string">"flat"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在创建class时，对注释进行控制 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 阻止生成注释，默认为false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--jdbc的数据库连接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"$&#123;jdbc.driverClass&#125;"</span></span></span><br><span class="line"><span class="tag"><span class="attr">connectionURL</span>=<span class="string">"$&#123;jdbc.jdbcUrl&#125;"</span> <span class="attr">userId</span>=<span class="string">"$&#123;jdbc.user&#125;"</span> <span class="attr">password</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 是否强制DECIMAL和NUMERIC类型的字段转换为Java类型的java.math.BigDecimal --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;pojoTargetPackage&#125;"</span></span></span><br><span class="line"><span class="tag"><span class="attr">targetProject</span>=<span class="string">"$&#123;targetProject&#125;"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否对model添加 构造函数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"constructorBased"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 建立的Model对象是否不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"immutable"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!--mapper xml映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;xmlTargetPackage&#125;"</span></span></span><br><span class="line"><span class="tag"><span class="attr">targetProject</span>=<span class="string">"$&#123;xmlTargetProject&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        type="XMLMAPPER" 接口和XML完全分离，接口中不出现SQL语句, 修改SQL不需要重新编译 (推荐使用)</span></span><br><span class="line"><span class="comment">        type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象</span></span><br><span class="line"><span class="comment">        type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span></span></span><br><span class="line"><span class="tag"><span class="attr">targetPackage</span>=<span class="string">"$&#123;mapperTargetPackage&#125;"</span> <span class="attr">targetProject</span>=<span class="string">"$&#123;targetProject&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成全部的表   tableName="%" --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"EMP"</span> <span class="attr">domainObjectName</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- generatedKey：用来指定生成的主键  会在Insert语句中添加 selectKey标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatedKey</span> <span class="attr">column</span>=<span class="string">"EMPNO"</span> <span class="attr">sqlStatement</span>=<span class="string">"MySql"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"DEPT"</span> <span class="attr">domainObjectName</span>=<span class="string">"Dept"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;mybatis逆向工程，就是mybatis会根据我们设计好的数据表，自动生成pojo、m
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="mybatis" scheme="https://jmzc4j.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>MySQL常用配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/MySQL%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/MySQL常用配置/</id>
    <published>2019-08-28T10:41:59.000Z</published>
    <updated>2019-08-28T10:44:57.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="my-cnf常用配置"><a href="#my-cnf常用配置" class="headerlink" title="my.cnf常用配置"></a>my.cnf常用配置</h3><p>[client]<br>#password = your_password<br>port = 3306                            #端口设置<br>socket = /tmp/mysql.sock             #本地客户端通讯需要使用的套接字文件，需要保护起来<br>default-character-set=utf-8            #客户端默认字符集       </p><p>[mysqld]<br>lower_case_table_names=1            #设置表名一律转小写，即大小写不敏感设置，Linux下默认是0<br>port = 3306                            #服务器端口<br>basedir=”/usr/local/mysql”            #设置mysql的安装目录<br>datadir=”/usr/local/mysql/data”        #设置mysql数据库的数据的存放目录<br>default-storage-engine=INNODB         #创建新表时将使用的默认存储引擎<br>socket = /tmp/mysql.sock             #服务器与本地客户端通讯的套接字文件位置<br>character-set-server=utf-8            #服务端使用的字符集<br>max_connections=100                    #服务器支持的最大并发连接数<br>query_cache_size=0                    #缓存查询结果的缓存大小<br>table_cache=256                        #为所有线程打开的表的数量<br>tmp_table_size=35M                    #内存中的每个临时表允许的最大大小<br>thread_cache_size=8                    #缓存的最大线程数             </p><p>#MyISAM相关参数<br>myisam_max_sort_file_size=100G  #重建索引时允许使用的临时文件最大大小<br>myisam_sort_buffer_size=68M        #快速创建索引的临时文件的缓冲区大小<br>key_buffer_size=54M                #缓存MyISAM表索引块的缓冲区大小，不要把它设置得超过可用内存的30%<br>read_buffer_size=64K            #全表扫描时使用的缓冲区大小<br>read_rnd_buffer_size=256K        #执行全表扫描的缓冲区的大小<br>sort_buffer_size=256K            #重建索引时为每个线程分配的缓冲区大小                 </p><p>#InnoDB相关参数<br>innodb_additional_mem_pool_size=34M #存储元数据信息的额外内存池大小，一般不需修改<br>innodb_flush_log_at_trx_commit =1    #事务提交频率，1表示每次都直接写入磁盘，不写入内存，更符合ACID的行为；其他值还有0和2，不推荐<br>innodb_log_buffer_size=2M            #缓冲日志数据的缓冲区大小，一旦已经满了，InnoDB必须把它刷新到磁盘上。<br>innodb_buffer_pool_size=105M        #缓存索引和行数据的缓冲池大小，一般将该值设为物理内存的80%<br>innodb_log_file_size=53M            #日志组中每个日志文件的大小。一般设为innodb_buffer_pool_size的25%到100%<br>innodb_thread_concurrency=10        #允许连接INNODB内核的最大并发线程数量              </p><p>#SQL模式为严格模式<br>sql-mode=”STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION”               </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;my-cnf常用配置&quot;&gt;&lt;a href=&quot;#my-cnf常用配置&quot; class=&quot;headerlink&quot; title=&quot;my.cnf常用配置&quot;&gt;&lt;/a&gt;my.cnf常用配置&lt;/h3&gt;&lt;p&gt;[client]&lt;br&gt;#password = your_password&lt;
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="mysql" scheme="https://jmzc4j.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>常用数据库的参数配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/常用数据库的参数配置/</id>
    <published>2019-08-28T10:37:28.000Z</published>
    <updated>2019-08-28T10:41:01.732Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JDBC的URL"><a href="#JDBC的URL" class="headerlink" title="JDBC的URL"></a>JDBC的URL</h3><p>JDBC的URL＝协议名＋子协议名＋数据源名。<br>协议名总是“jdbc”。<br>子协议名由JDBC驱动程序的编写者决定。<br>数据源名也可能包含用户与口令等信息；这些信息也可单独提供。</p><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><p>mysql.driver=com.mysql.jdbc.Driver<br>mysql.url=jdbc:mysql://192.168.157.130:3306/mybatis01?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false<br>mysql.username=root<br>mysql.password=root</p><h3 id="oracle"><a href="#oracle" class="headerlink" title="oracle"></a>oracle</h3><p>oracle.driver=oracle.jdbc.driver.OracleDriver<br>oracle.url=jdbc:oracle:thin:@127.0.0.1:1521:xe<br>oracle.username=system<br>oracle.password=abc123</p><h3 id="sql-server"><a href="#sql-server" class="headerlink" title="sql server"></a>sql server</h3><p>sqlServer.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver<br>sqlServer.url=jdbc:sqlserver://localhost:1433;DatabaseName=mydb<br>sqlServer.username=sa<br>sqlServer.password=123</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JDBC的URL&quot;&gt;&lt;a href=&quot;#JDBC的URL&quot; class=&quot;headerlink&quot; title=&quot;JDBC的URL&quot;&gt;&lt;/a&gt;JDBC的URL&lt;/h3&gt;&lt;p&gt;JDBC的URL＝协议名＋子协议名＋数据源名。&lt;br&gt;协议名总是“jdbc”。&lt;br&gt;子协议
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="database" scheme="https://jmzc4j.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis常用配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Mybatis%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Mybatis常用配置/</id>
    <published>2019-08-28T10:23:58.000Z</published>
    <updated>2019-08-28T14:30:00.116Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>MyBatis 是一款优秀的持久层框架，它支持定制化SQL、存储过程以及高级映射;避免了几乎所有的JDBC 代码和手动设置参数以及获取结果集;</li><li>MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects)映射成数据库中的记录;</li><li>官方文档：<a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">mybatis</a>;</li></ul><h3 id="mybatis-config-xml配置"><a href="#mybatis-config-xml配置" class="headerlink" title="mybatis-config.xml配置"></a>mybatis-config.xml配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">在配置文件中，属性的加载有三种方式：</span></span><br><span class="line"><span class="comment">1. resource或者url引入外部资源；</span></span><br><span class="line"><span class="comment">2. 在properties标签中使用property子标签进行定义，然后使用表达式引用；</span></span><br><span class="line"><span class="comment">3. 直接在要使用的位置硬编码；</span></span><br><span class="line"><span class="comment">注意：以上三种方式的优先级从低到高；</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"mybatis/db.properties"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">全局配置信息</span></span><br><span class="line"><span class="comment">logImpl：mybatis日志的实现；</span></span><br><span class="line"><span class="comment">cacheEnabled：二级缓存开关；</span></span><br><span class="line"><span class="comment">lazyLoadingEnabled：懒加载开关；</span></span><br><span class="line"><span class="comment">aggressiveLazyLoading：积极懒加载开关，当懒加载时是否主动进行属性的初始化；</span></span><br><span class="line"><span class="comment">mapUnderscoreToCamelCase：数据库列映射Java对象属性开关；</span></span><br><span class="line"><span class="comment">useActualParamName：参数命名开关；</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"slf4j"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"aggressiveLazyLoading"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useActualParamName"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">以包扫描的方式进行别名定义，默认类名首字母小写（注意别名其实是不区分大小写的）；</span></span><br><span class="line"><span class="comment">当子包有相同的 类名存在时，可以使用@Alias注解进行签名；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.jmzc.pojo"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">插件配置：以AOP的方式对Executor、MappedStatement、ParameterHandler、ResultSetHandler四大对象的方法进行拦截；</span></span><br><span class="line"><span class="comment">自定义插件的步骤：</span></span><br><span class="line"><span class="comment">1. 实现Intercept接口，逐一实现setProperties()、plugin()和intercept()方法；</span></span><br><span class="line"><span class="comment">2. 为定制的插件进行签名，使用@@Intercepts注解；</span></span><br><span class="line"><span class="comment">3. 在mybatis配置文件中进行声明；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">pagehelper5中可以自动配置dialect，当进行定制配置时，dialect的值一定是全类名，源码中发现使用dialectClass进行反射</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"com.github.pagehelper.PageInterceptor"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;property name="dialect" value="com.github.pagehelper.dialect.helper.MySqlDialect"/&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"dev_mysql"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">配置Session的环境，可以有多个环境，通过environments标签的default属性来切换；</span></span><br><span class="line"><span class="comment">transactionManager：需要指定事务工厂的类型，这里使用的是别名，也可以实现ibatis提供的接口来进行定制；</span></span><br><span class="line"><span class="comment">dataSource：需要指定数据源工厂的类型，同样使用的是别名，同样可以实现ibatis提供的接口进行定制；</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"dev_mysql"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysql.driver&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysql.url&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysql.username&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysql.password&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">为不同的数据库厂商的ProductName设置别名；</span></span><br><span class="line"><span class="comment">ProductName可以从Connection接口的MetaData中得到；</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">databaseIdProvider</span> <span class="attr">type</span>=<span class="string">"DB_VENDOR"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"MySQL"</span> <span class="attr">value</span>=<span class="string">"mysql"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"Oracle"</span> <span class="attr">value</span>=<span class="string">"oracle"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"SQL Server"</span> <span class="attr">value</span>=<span class="string">"sqlserver"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseIdProvider</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定映射文件的包路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"top.jmzc.mapper"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MyBatis 是一款优秀的持久层框架，它支持定制化SQL、存储过程以及高级映射;避免了
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="mybatis" scheme="https://jmzc4j.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Redis常用配置</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Redis%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Redis常用配置/</id>
    <published>2019-08-28T10:19:39.000Z</published>
    <updated>2019-08-28T10:21:07.605Z</updated>
    
    <content type="html"><![CDATA[<h3 id="redis-cof常见配置说明"><a href="#redis-cof常见配置说明" class="headerlink" title="redis.cof常见配置说明"></a>redis.cof常见配置说明</h3><ol><li>Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程<br>daemonize no</li><li>当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定<br>pidfile /var/run/redis.pid</li><li>指定Redis监听端口，默认端口为6379，作者在自己的一篇博文中解释了为什么选用6379作为默认端口，因为6379在手机按键上MERZ对应的号码，而MERZ取自意大利歌女Alessia Merz的名字<br>port 6379</li><li>绑定的主机地址<br>bind 127.0.0.1</li><li>当 客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能<br>timeout 300</li><li>指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose<br>loglevel verbose</li><li>日志记录方式，默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给/dev/null<br>logfile stdout</li><li>设置数据库的数量，默认数据库为0，可以使用SELECT 命令在连接上指定数据库id<br>databases 16</li><li>指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合<br>save<br>Redis默认配置文件中提供了三个条件：<br>save 900 1<br>save 300 10<br>save 60 10000<br>分别表示900秒（15分钟）内有1个更改，300秒（5分钟）内有10个更改以及60秒内有10000个更改。</li><li>指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大<br>rdbcompression yes</li><li>指定本地数据库文件名，默认值为dump.rdb<br>dbfilename dump.rdb</li><li>指定本地数据库存放目录<br>dir ./</li><li>设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步<br>slaveof </li><li>当master服务设置了密码保护时，slav服务连接master的密码<br>masterauth </li><li>设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH 命令提供密码，默认关闭<br>requirepass foobared</li><li>设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis会关闭新的连接并向客户端返回max number of clients reached错误信息<br>maxclients 128</li><li>指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区<br>maxmemory </li><li>指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no<br>appendonly no</li><li>指定更新日志文件名，默认为appendonly.aof<br>appendfilename appendonly.aof</li><li>指定更新日志条件，共有3个可选值：<br>no：表示等操作系统进行数据缓存同步到磁盘（快）<br>always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）<br>everysec：表示每秒同步一次（折衷，默认值）<br>appendfsync everysec</li><li>指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析Redis的VM机制）<br>vm-enabled no</li><li>虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享<br>vm-swap-file /tmp/redis.swap</li><li>将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的(Redis的索引数据 就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0<br>vm-max-memory 0</li><li>Redis swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不 确定，就使用默认值<br>vm-page-size 32</li><li>设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，，在磁盘上每8个pages将消耗1byte的内存。<br>vm-pages 134217728</li><li>设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4<br>vm-max-threads 4</li><li>设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启<br>glueoutputbuf yes</li><li>指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法<br>hash-max-zipmap-entries 64<br>hash-max-zipmap-value 512</li><li>指定是否激活重置哈希，默认为开启（后面在介绍Redis的哈希算法时具体介绍）<br>activerehashing yes</li><li>指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件<br>include /path/to/local.conf</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;redis-cof常见配置说明&quot;&gt;&lt;a href=&quot;#redis-cof常见配置说明&quot; class=&quot;headerlink&quot; title=&quot;redis.cof常见配置说明&quot;&gt;&lt;/a&gt;redis.cof常见配置说明&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Redis默认不是以守护
      
    
    </summary>
    
      <category term="配置文件" scheme="https://jmzc4j.github.io/categories/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="redis" scheme="https://jmzc4j.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Docker%E5%85%A5%E9%97%A8/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Docker入门/</id>
    <published>2019-08-28T09:09:05.000Z</published>
    <updated>2019-08-28T10:17:35.303Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>Docker是一个容器管理引擎，是一个轻量级的虚拟化技术；从镜像和容器的角度来定义一个应用；</li><li>将应用代码和配置等打包成一个可运行的环境（image），从而实现开发和生产环境的完美对接，达到一种一次构建到处运行的目的；</li><li>repository、image、container为其最重要的三个组成部分。</li><li>image是由一层一层的文件系统组成，即UnionFS；其最底层是bootfs；</li><li>image都是只读的，当容器启动时，一个新的可写层被加载到镜像的顶部；这一层通常被称作“容器层”，“容器层”之下的都叫“镜像层”。</li><li>通过容器数据卷来实现数据持久化和数据共享；</li></ul><h3 id="安装与卸载"><a href="#安装与卸载" class="headerlink" title="安装与卸载"></a>安装与卸载</h3><ul><li><p>centos安装步骤</p><p>  ①卸载旧版本</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$sudo yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure><p>  ②安装依赖包</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sudo yum install -y yum-utils \</span><br><span class="line">device-mapper-persistent-data \</span><br><span class="line">lvm2</span><br></pre></td></tr></table></figure><p>  ③配置仓库地址（这里使用阿里巴巴的国内镜像）</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sudo yum-config-manager \</span><br><span class="line">   --add-repo \</span><br><span class="line">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">#这里可以清理yum缓存文件</span><br><span class="line">$yum makecache fast</span><br></pre></td></tr></table></figure><p>  ④安装最新版或者自行选择版本</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#列出docker引擎的可用版本</span><br><span class="line">$yum list docker-ce --showduplicates | sort -r</span><br><span class="line">#选择版本进行安装</span><br><span class="line">#例如查到docker-ce.x86_64  3:18.09.1-3.el7                     docker-ce-stable</span><br><span class="line">#那么VERSION_STRING就是 docker-ce-18.09.1</span><br><span class="line">$sudo yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io</span><br><span class="line"></span><br><span class="line">#也可以直接安装最新版</span><br><span class="line">$sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>  ⑤启动</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>  ⑥测试</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run hello-world</span><br><span class="line"></span><br><span class="line">或者执行docker version</span><br></pre></td></tr></table></figure><p>  ⑦配置阿里云的镜像加速</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">登录阿里云进入控制台，搜索容器镜像服务</span><br><span class="line">点击镜像加速器，然后找到centos的配置信息，按步骤配置即可</span><br><span class="line"></span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">#这里的镜像ID（u7dhnsts）不同人会不同</span><br><span class="line">&#123;&quot;registry-mirrors&quot;: [&quot;https://u7dhnsts.mirror.aliyuncs.com&quot;]  &#125;</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li><li><p>卸载</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum remove docker-ce</span><br><span class="line">$ sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure></li></ul><h3 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h3><ol><li><p><code>docker --help|docker &lt;command&gt; --help</code>：查看帮助</p></li><li><p><code>docker images</code> ：查看镜像列表；</p></li><li><p><code>docker rmi -f $(docker images -qa)</code>：删除多个镜像；</p></li><li><p><code>docker ps</code>；查看正在运行的容器；</p></li><li><p><code>docker rm -f $(docker ps -qa)</code>：删除所有的容器；</p></li><li><p><code>docker run &lt;containerName|containerID&gt;</code> ：在镜像上创建一个容器（本地没有则会自动去远程仓库拉去）；    </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS说明（常用）：有些是一个减号，有些是两个减号</span><br><span class="line">--name=&quot;容器新名字&quot;: 为容器指定一个名称；</span><br><span class="line">-d: 后台运行容器，并返回容器ID，也即启动守护式容器；</span><br><span class="line">-i：以交互模式运行容器，通常与 -t 同时使用；</span><br><span class="line">-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用；</span><br><span class="line">-P: 随机端口映射；</span><br><span class="line">-p: 指定端口映射，有以下四种格式</span><br><span class="line">  ip:hostPort:containerPort</span><br><span class="line">  ip::containerPort</span><br><span class="line"> hostPort:containerPort</span><br><span class="line">  containerPort</span><br><span class="line">```     </span><br><span class="line">1. `docker search &lt;imageName:tag&gt;`：在仓库上搜索镜像，默认latest；</span><br><span class="line">1. `docker pull &lt;imageName:tag&gt;`：从远程拉取镜像到本地；</span><br><span class="line">1. `docker exec -it /bin/bash`：进入正在运行的容器；</span><br><span class="line">1. `docker commit -m &quot;xxx&quot; -a &quot;xxx&quot; &lt;containerName|containerID&gt; targetImage:tag`：基于容器生成一个新的镜像；</span><br><span class="line">1. `docker inspect &lt;containerName|containerID&gt;`：查看容器的详细信息；</span><br><span class="line">1. `docker info | docker version`：查看docker的简单信息；</span><br><span class="line">1. `docker logs -f &lt;containerName|containerID&gt;`：查看一个容器的历史记录</span><br><span class="line">1. `docker start|stop|restart &lt;containerName|containerID&gt;`：启动、停止、重启容器；</span><br><span class="line">1. `docker kill &lt;containerName|containerID&gt;`：强制停止容器；</span><br><span class="line">1. `docker cp  containerID:path hostPath`：从容器拷贝文件到主机；</span><br><span class="line">1. `docker build -t 新镜像名字:TAG `：从Dockerfile中创建镜像；</span><br><span class="line">1. `docker history 镜像名`：查看镜像的变更历史；</span><br><span class="line"></span><br><span class="line">### Dockerfile</span><br><span class="line">- Dockerfile是用来构建Docker镜像的构建文件，是由一系列命令和参数构成的脚本；</span><br><span class="line">- Dockerfile约定</span><br><span class="line">1. 每条保留字指令都必须为大写字母且后面要跟随至少一个参数；</span><br><span class="line">2. 指令按照从上到下，顺序执行；</span><br><span class="line">3. 每条指令都会创建一个新的镜像层，并对镜像进行提交；</span><br><span class="line">- Dockerfile大致流程</span><br><span class="line">1. docker从基础镜像运行一个容器；</span><br><span class="line">2. 执行一条指令并对容器作出修改；</span><br><span class="line">3. 执行类似docker commit的操作提交一个新的镜像层；</span><br><span class="line">4. docker再基于刚提交的镜像运行一个新容器；</span><br><span class="line">5. 执行dockerfile中的下一条指令直到所有指令都执行完成；</span><br><span class="line">- Dockerfile中的关键字</span><br><span class="line">1. `FROM`：基础镜像，当前新镜像是基于哪个镜像的；</span><br><span class="line">1. `MAINTAINER`：镜像维护者的姓名和邮箱地址；</span><br><span class="line">1. `RUN`：容器构建时需要运行的命令；</span><br><span class="line">1. `EXPOSE`：当前容器对外暴露出的端口；</span><br><span class="line">1. `WORKDIR`：指定在创建容器后，终端默认登陆的进来工作目录，一个落脚点；</span><br><span class="line">1. `ENV`：用来在构建镜像过程中设置环境变量；</span><br><span class="line">1. `ADD`：将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包；</span><br><span class="line">1. `COPY`：类似ADD，拷贝文件和目录到镜像中；但不进行解压；</span><br><span class="line">1. `VOLUME`：容器数据卷，用于数据保存和持久化工作；</span><br><span class="line">1. `CMD`：指定一个容器启动时要运行的命令；多个CMD会被覆盖；CMD 会被 docker run 之后的参数替换；</span><br><span class="line">1. `ENTRYPOINT`：ENTRYPOINT 的目的和 CMD 一样，都是在指定容器启动程序及参数，以追加的方式执行；</span><br><span class="line">1. `ONBUILD`：当构建一个被继承的Dockerfile时运行命令，父镜像在被子继承后父镜像的onbuild被触发；</span><br><span class="line">- 自定义tomcat9</span><br></pre></td></tr></table></figure><p> FROM         centos<br> MAINTAINER    zzyy<br> #把宿主机当前上下文的c.txt拷贝到容器/usr/local/路径下<br> COPY c.txt /usr/local/cincontainer.txt<br> #把java与tomcat添加到容器中<br> ADD jdk-8u171-linux-x64.tar.gz /usr/local/<br> ADD apache-tomcat-9.0.8.tar.gz /usr/local/<br> #安装vim编辑器<br> RUN yum -y install vim<br> #设置工作访问时候的WORKDIR路径，登录落脚点<br> ENV MYPATH /usr/local<br> WORKDIR $MYPATH<br> #配置java与tomcat环境变量<br> ENV JAVA_HOME /usr/local/jdk1.8.0_171<br> ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br> ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.8<br> ENV CATALINA_BASE /usr/local/apache-tomcat-9.0.8<br> ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin<br> #容器运行时监听的端口<br> EXPOSE  8080<br> #启动时运行tomcat</p><h1 id="ENTRYPOINT-“-usr-local-apache-tomcat-9-0-8-bin-startup-sh”"><a href="#ENTRYPOINT-“-usr-local-apache-tomcat-9-0-8-bin-startup-sh”" class="headerlink" title="ENTRYPOINT [“/usr/local/apache-tomcat-9.0.8/bin/startup.sh” ]"></a>ENTRYPOINT [“/usr/local/apache-tomcat-9.0.8/bin/startup.sh” ]</h1><h1 id="CMD-“-usr-local-apache-tomcat-9-0-8-bin-catalina-sh”-”run”"><a href="#CMD-“-usr-local-apache-tomcat-9-0-8-bin-catalina-sh”-”run”" class="headerlink" title="CMD [“/usr/local/apache-tomcat-9.0.8/bin/catalina.sh”,”run”]"></a>CMD [“/usr/local/apache-tomcat-9.0.8/bin/catalina.sh”,”run”]</h1><p> CMD /usr/local/apache-tomcat-9.0.8/bin/startup.sh &amp;&amp; tail -F /usr/local/apache-tomcat-9.0.8/bin/logs/catalina.out</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### docker安装mysql5.7</span><br></pre></td></tr></table></figure></li></ol><p>docker run -d –name mysql-5.7 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -v /usr/local/mysql/data:/var/lib/mysql -v /usr/local/mysql/my.cnf:/etc/mysql/my.cnf -v /usr/local/mysql/conf.d:/etc/mysql/conf.d -v /usr/local//mysql/mysql.conf.d:/etc/mysql/mysql.conf.d -v /usr/local/mysql/log:/var/log/mysql –privileged=true mysql:5.7</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Docker是一个容器管理引擎，是一个轻量级的虚拟化技术；从镜像和容器的角度来定义一个应
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="docker" scheme="https://jmzc4j.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Git入门</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Git%E5%85%A5%E9%97%A8/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Git入门/</id>
    <published>2019-08-28T09:03:45.000Z</published>
    <updated>2019-08-28T09:04:20.766Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>git 是一个免费开源的分布式版本控制工具；</li><li><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">书籍-Pro Git</a>：有关git的一切可阅读此书获取；</li></ul><h3 id="why-use-it"><a href="#why-use-it" class="headerlink" title="why use it"></a>why use it</h3><ul><li>既可以进行本地版本控制，又可以进行分布式版本控制；</li><li>不存在集中式版本控制工具的单点故障问题；</li><li>具有强大的分支管理；</li><li>由于是Linus开发，天然可以使用Linux命令；</li></ul><h3 id="Git分支"><a href="#Git分支" class="headerlink" title="Git分支"></a>Git分支</h3><ul><li><p>假设有三个目录，并做了提交;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add README test.rb LICENSE</span><br><span class="line">$ git commit -m &apos;The initial commit of my project&apos;</span><br></pre></td></tr></table></figure></li><li><p>Git会对每个子目录进行校验，并将它们作为树对象存储在Git存储库中;然后Git创建一个提交对象，该对象具有元数据和指向根项目树的指针，因此它可以在需要时重新创建该快照。</p></li><li><p><img src="https://git-scm.com/book/en/v2/images/commit-and-tree.png" alt="A commit and its tree">;</p></li><li><p>如果进行一些更改并再次提交，则下一个提交会存储指向紧接其之前的提交的指针。</p></li><li><p><img src="https://git-scm.com/book/en/v2/images/commits-and-parents.png" alt="Commits and their parents">；</p></li><li><p>Git中的一个分支只是一个指向其中一个提交的轻量级可移动指针。Git中的默认分支名称是master。当你开始提交时，你会得到一个master指向你最后一次提交的分支。每次提交时，master分支指针都会自动向前移动。</p></li><li><p><img src="https://git-scm.com/book/en/v2/images/branch-and-history.png" alt="A branch and its commit history">;</p></li><li><p>Git中的“主”分支不是特殊分支。它与任何其他分支完全一样。几乎每个存储库都有一个的唯一原因是该git init命令默认创建它，并且大多数人都不愿意更改它。</p></li></ul><h3 id="how-to-use-it"><a href="#how-to-use-it" class="headerlink" title="how to use it"></a>how to use it</h3><ul><li><p>安装</p><ol><li><a href="https://git-scm.com/download/linux" target="_blank" rel="noopener">Linux说明</a>;   </li><li><a href="https://git-scm.com/download/mac" target="_blank" rel="noopener">macOS下载地址</a>;   </li><li><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Windows下载地址</a>;             </li></ol></li><li><p>首次配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 安装Git时应该做的第一件事是设置用户名和电子邮件地址</span><br><span class="line"># --system：指定系统级别，--global：指定用户级别</span><br><span class="line">$ git config --global user.name &quot;John Doe&quot;</span><br><span class="line">$ git config --global user.email johndoe@example.com</span><br><span class="line"></span><br><span class="line"># 使用以下方法查看所有设置及其来源</span><br><span class="line">$ git config --list --show-origin</span><br></pre></td></tr></table></figure></li><li><p>获取帮助</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git help &lt;verb&gt;</span><br><span class="line">$ git &lt;verb&gt; --help</span><br><span class="line">$ man git-&lt;verb&gt;</span><br><span class="line"></span><br><span class="line"># 如果您不需要完整的联机帮助页面帮助，但只需要快速了解Git命令的可用选项，您可以使用-h或--help,如：</span><br><span class="line">$ git add -h</span><br></pre></td></tr></table></figure></li><li><p>常用命令</p><ol><li><code>$ git init</code>：在现有目录中初始化存储库；</li><li><code>$ git add xxx</code>：将xxx文件从工作区添加到暂存区；untrace-stage；</li><li><code>$ git commit -m &#39;initial project version&#39;</code>：从暂存区永久提交到当前分支；stage-unmodified；</li><li><code>$ git clone https://github.com/libgit2/libgit2 mylibgit</code>：克隆存储库到本地并修改存储库的目录名；</li><li><code>$ git status</code>：查看文件状态，主要查看文件内容是否发生了变化；</li><li><code>$ git diff</code>：查看工作区与暂存区的更改；</li><li><code>$ git diff --cached</code>：查看暂存区与上次提交的更改；</li><li><code>$ git log  [--pretty=oneline]</code>：查看提交历史，用于回退过去；</li><li><code>$ git reflog</code>：查看命令历史，用于追溯未来；</li><li><code>$ git reset --hard commitID</code>：切换版本；</li><li><code>$ git rm --cached README</code>：删除暂存区文件；</li><li><code>$ git checkout xxx</code>：同步到工作区；</li><li><code>$ git commit --amend</code>：重做提交；</li><li><code>$ git remote -v</code>：查看远程时要使用的短名称存储的URL；</li><li><code>$ git remote add &lt;shortname&gt; &lt;url&gt;</code>：为远程库添加一个新的短名称；</li><li><code>$ git fetch &lt;remote&gt;</code>：从远处库抓取数据；</li><li><code>$ git push &lt;remote&gt; &lt;branch&gt;</code>：推送当前分支到远程库</li><li><code>$ git remote rename pb paul</code>：更改远程库别名pb为paul；</li><li><code>$ git remote remove paul</code>：删除一个远程库url；</li><li><code>$ git push &lt;remote&gt;</code>：抓取并合并到本地；</li><li><code>$ git branch testing</code>：创建一个testing分支；</li><li><code>$ git checkout testing</code>:切换分支；</li><li><code>$ git merge hotfix</code>：合并hotfix分支到当前分支上；</li><li><code>$ git branch -d hotfix</code>：删除分支；</li><li><code>$ git branch -v</code>：查看每个分支上的最后一次提交；</li><li><code>$ git branch --merged</code>：查看已经合并了的分支，不带星号的分支可以删除；</li><li><code>$ git push &lt;remote&gt; &lt;branch&gt;</code>：将本地分支推送到一个名称不同的远程分支；</li><li><code>$ git checkout -b sf origin/serverfix</code>：设置名称与远程分支不同的本地分支；</li><li><code>git branch -u origin/serverfix</code>：更新当前分支为远程分支；</li><li><code>$ git push origin --delete serverfix</code>：完成合并删除远程分支；</li></ol></li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">书籍-Pro Git</a>;</li><li><a href="https://www.cnblogs.com/chris0710/p/8925977.html" target="_blank" rel="noopener">博客园-Git命令总结</a>;</li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰-Git教程</a>;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git 是一个免费开源的分布式版本控制工具；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="git" scheme="https://jmzc4j.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Redis命令</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Redis%E5%91%BD%E4%BB%A4/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Redis命令/</id>
    <published>2019-08-28T09:01:17.000Z</published>
    <updated>2019-08-28T09:02:14.055Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>Redis全称为 Remote Dictionary Server;</li><li>Redis是一个遵守BSD协议的开源的基于内存的数据结构存储服务；可以用做数据库、缓存和消息中间件；（官方）</li><li>Redis是意大利人用C语言编写的一个高性能的（key/value）分布式的NoSQL数据库，支持多种数据类型并支持持久化；</li></ul><h3 id="how-to-use-it"><a href="#how-to-use-it" class="headerlink" title="how to use it"></a>how to use it</h3><h4 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h4><ul><li><code>dbsize</code></li><li><code>select dbIndex</code></li><li><code>flushdb</code></li><li><code>flushall</code></li><li><code>keys *</code></li><li><code>exists key</code></li><li><code>move key dbIndex</code></li><li><code>expire key</code>：设置key的存活时间（秒单位）</li><li><code>ttl key</code>：查看key的剩余存活时长，返回值含义（-1，永恒；-2，过期），过期就会被从内存中删除该key</li><li><code>persist key</code>：去掉有效期设置</li><li><code>type key</code></li></ul><h5 id="string-常用"><a href="#string-常用" class="headerlink" title="string 常用"></a>string 常用</h5><ul><li><code>set/get/del/append/strlen key</code></li><li><code>incr/decr key</code></li><li><code>incrby/decrby key increment</code></li><li><code>getrange/setrange key startIndex endIndex</code>：获取key对应的指定范围的value，第一个索引为0，最后一个索引为-1</li><li><code>setex(with expire) key second value</code></li><li><code>setnx(if not exist) key value</code></li><li><code>mset/mget/msetnx key</code> ：添加、获取多个kv</li><li><code>getset</code></li></ul><h5 id="list-常用"><a href="#list-常用" class="headerlink" title="list 常用"></a>list 常用</h5><ul><li><code>lpush/rpush/lrange</code></li><li><code>lpop/rpop</code></li><li><code>lIndex key</code></li><li><code>lrem key count value</code></li><li><code>ltrim key start end</code> ；截取start到end的元素再赋值给原来的key</li><li><code>rpoplpush srcList targetList</code>：当scr与target相同就构成了一个循环</li><li><code>lInsert key before/after v1 v2</code></li><li><code>lset key index value</code></li></ul><h5 id="set-常用"><a href="#set-常用" class="headerlink" title="set 常用"></a>set 常用</h5><ul><li><code>sadd</code></li><li><code>smembers key</code></li><li><code>sismember key v1</code></li><li><code>scard</code>：获取元素个数</li><li><code>srem key value</code></li><li><code>srandmember key num</code>：随机取出num个元素</li><li><code>spop key</code></li><li><code>smove key1 key2 value-in-key1</code>：将key1中的某个值移动到key的集合中</li><li><code>sdiff key1 key2</code>：获取在key1集合但不在key2集合的元素</li><li><code>sinter key1 key2</code></li><li><code>sunion key1 key2</code></li></ul><h4 id="hash-常用"><a href="#hash-常用" class="headerlink" title="hash 常用"></a>hash 常用</h4><ul><li><code>hset/hget/hdel/hmset/hmget/hgetall</code></li><li><code>hlen</code></li><li><code>hexists key in-key</code></li><li><code>hkeys/hvals</code></li><li><code>hincrby/hincrbyfloat</code></li><li><code>hsetnx</code></li></ul><h4 id="zset-常用"><a href="#zset-常用" class="headerlink" title="zset 常用"></a>zset 常用</h4><ul><li><code>zadd/zrange</code>：zadd zset1 60 v1 70 v2 80 v3 90 v4 100 v5</li><li><code>zrangebyscore key startScore endScore</code>：默认取左闭右闭区间，可以使用左小括号来更改为开区间</li><li><code>zcard/zcount key score1 score2</code></li><li><code>zrank key value</code>：获取value在key集合中的排名，即获取下标</li><li><code>zscore key value</code></li><li><code>zrevrange</code></li><li><code>zrevrank key value</code></li><li><code>zrevrangebyscore key endScore startScore</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Redis全称为 Remote Dictionary Server;&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="redis" scheme="https://jmzc4j.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Maven入门</title>
    <link href="https://jmzc4j.github.io/2019/08/28/Maven%E5%85%A5%E9%97%A8/"/>
    <id>https://jmzc4j.github.io/2019/08/28/Maven入门/</id>
    <published>2019-08-28T08:40:39.000Z</published>
    <updated>2019-08-28T08:53:23.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="what-is"><a href="#what-is" class="headerlink" title="what is"></a>what is</h3><ul><li>maven 是 apache软件基金会的一个产品；</li><li>maven 是一个将模型应用于工程的管理系统；</li><li>maven 是 一个Java项目的构建和管理工具，包括项目生命周期的管理和项目依赖的管理；</li></ul><h3 id="why-use-it"><a href="#why-use-it" class="headerlink" title="why use it"></a>why use it</h3><ul><li>简化项目构建，缩短了开发周期；</li><li>将代码与架包分离，仅仅在POM中提供依赖的引用即可；</li><li>统一的目录结构和约定，有利于开发者理解开发原则；</li></ul><h3 id="how-to-config-it"><a href="#how-to-config-it" class="headerlink" title="how to config it"></a>how to config it</h3><ul><li><p>配置本地仓库路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;localRepository&gt;D:\Repository\mvnRepo&lt;/localRepository&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置远程镜像仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;mirrors&gt;</span><br><span class="line">    &lt;mirror&gt;</span><br><span class="line">&lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">&lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line">&lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;/mirror&gt;</span><br><span class="line">  &lt;/mirrors&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置JDK版本（也可以使用编译插件）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;profiles&gt;</span><br><span class="line">&lt;!--定义工程的JDK版本--&gt;</span><br><span class="line">&lt;profile&gt;</span><br><span class="line">&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class="line">&lt;activation&gt;</span><br><span class="line">&lt;activeteByDefault&gt;true&lt;/activeteByDefault&gt;</span><br><span class="line">&lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">&lt;/activation&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">&lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">&lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line">&lt;/profile&gt;</span><br><span class="line">  &lt;/profiles&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="how-to-use-it"><a href="#how-to-use-it" class="headerlink" title="how to use it"></a>how to use it</h3><ul><li><p>maven的基本工作单元就是POM，POM中包含着项目的部分描述信息，所有的maven操作都是从POM开始的；</p></li><li><p>maven的指令代表着生命周期中的不同阶段，这些指令仅仅是一个抽象层的定义，真实的操作都有由相应的插件来处理的；</p></li><li><p>maven项目创建,使用原型（模板）创建不同的项目，过程中默认选择模板7（快速版）和默认1.0-snapshot版本；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:generate  </span><br><span class="line">  -DarchetypeGroupId=org.apache.maven.archetypes   </span><br><span class="line">  -DgroupId=com.mycompany.app  </span><br><span class="line">  -DartifactId=my-app</span><br></pre></td></tr></table></figure></li><li><p>创建结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;!-- 指定模型的版本，一般不会变，统一版本可以确保稳定性 --&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--</span><br><span class="line">    指定坐标和打包方式：</span><br><span class="line">      groupId：组织和项目唯一标识；</span><br><span class="line">      artifactId：工程基础名称；</span><br><span class="line">      version：版本号和类型；</span><br><span class="line">      packaging：打包方式，默认jar，同时约束了生命周期的最终阶段；</span><br><span class="line">   --&gt;</span><br><span class="line">  &lt;groupId&gt;com.mycompany.app&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;my-app&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--</span><br><span class="line">    Maven生成的文档相关：</span><br><span class="line">      name:项目的显示名称;</span><br><span class="line">      url:项目站点的位置;</span><br><span class="line">      description:项目的基本描述;</span><br><span class="line">   --&gt;</span><br><span class="line">  &lt;name&gt;my-app&lt;/name&gt;</span><br><span class="line">  &lt;url&gt;http://maven.apache.org&lt;/url&gt;</span><br><span class="line"></span><br><span class="line">  &lt;！-- 自定义的属性，EL方式引用 --&gt;</span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">  &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;3.8.1&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>目录结构如下：(使用IDE创建的还会有resource目录)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">my-app</span><br><span class="line">|-- pom.xml</span><br><span class="line">`-- src</span><br><span class="line">    |-- main</span><br><span class="line">    |   `-- java</span><br><span class="line">    |       `-- com</span><br><span class="line">    |           `-- mycompany</span><br><span class="line">    |               `-- app</span><br><span class="line">    |                   `-- App.java</span><br><span class="line">    `-- test</span><br><span class="line">        `-- java</span><br><span class="line">            `-- com</span><br><span class="line">                `-- mycompany</span><br><span class="line">                    `-- app</span><br><span class="line">                        `-- AppTest.java</span><br></pre></td></tr></table></figure></li><li><p>其他maven指令：   </p><ol><li><code>mvn compile</code>：编译源代码；   </li><li><code>mvn test</code>：编译测试源代码并指定命名约定的单元测试；   </li><li><code>mvn test-compile</code>：仅编译吃源代码；   </li><li><code>mvn package</code>：打包到target目录中；   </li><li><code>mvn install</code>：打包到本地仓库中；   </li><li><code>mvn site</code>：生成项目的web站点；   </li><li><code>mvn clean</code>：清理target的目录；   </li><li><code>mvn eclipse:eclipse</code>：生成eclispe项目；   </li><li><code>mvn idea:idea</code>：生成idea项目；   </li><li><code>mvn eclipse:clean</code>：清楚eclispe配置；   </li><li><code>mvn dependency:list</code>：列出所有依赖；   </li><li><code>mvn deploy</code>：上传到私服；   </li><li><code>mvn test -skipping compile -skipping test-compile</code>：不编译仅测试；   </li><li><code>mvn -version/-v</code>：查看maven版本；   </li><li><code>mvn jetty:run</code>：jetty上运行；   </li><li><code>mvn -e</code>：显示错误信息；   </li><li><code>mvn validate</code>：验证工程是否正确，所有需要的资源是否可用；   </li><li><code>mvn verify</code>：运行任何检查，验证包是否有效且达到质量标准；   </li><li><code>mvn dependency:tree</code>：输出依赖树；   </li><li><code>mvn tomcat:run</code>：在tomcat6上运行；   </li><li><code>mvn help:describe -Dplugin=pluginName -Dgoal(或-Dmojo)=goalName</code>：列出某个插件的goal信息；   </li><li><code>mvn tomcat7:run -Dmaven.test.skip=true</code>：跳过测试；   </li><li><code>mvn eclipse:eclipse -DskipTests</code>：生成导入Eclipse中的项目列表。一般在项目导入之前使用；   </li><li><code>mvn install:install-file -DgroupId=com -DartifactId=client -Dversion=0.1.0 -Dpackaging=jar -Dfile=d:\client-0.1.0.jar</code>：打包jar到本地库；</li></ol></li></ul><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul><li>如何发布jar到远程仓库<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;distributionManagement&gt;</span><br><span class="line">    &lt;repository&gt;</span><br><span class="line">      &lt;id&gt;mycompany-repository&lt;/id&gt;</span><br><span class="line">      &lt;name&gt;MyCompany Repository&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;scp://repository.mycompany.com/repository/maven2&lt;/url&gt;</span><br><span class="line">    &lt;/repository&gt;</span><br><span class="line">&lt;/distributionManagement&gt;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class="line">  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0</span><br><span class="line">                      http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;servers&gt;</span><br><span class="line">    &lt;server&gt;</span><br><span class="line">      &lt;id&gt;mycompany-repository&lt;/id&gt;</span><br><span class="line">      &lt;username&gt;jvanzyl&lt;/username&gt;</span><br><span class="line">      &lt;!-- Default value is ~/.ssh/id_dsa --&gt;</span><br><span class="line">      &lt;privateKey&gt;/path/to/identity&lt;/privateKey&gt; (default is ~/.ssh/id_dsa)</span><br><span class="line">      &lt;passphrase&gt;my_key_passphrase&lt;/passphrase&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">  &lt;/servers&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure><ul><li><p>编译插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.7.0&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">          &lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure></li><li><p>测试插件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.18.1&lt;/version&gt;</span><br><span class="line">    &lt;!-- 同样实现跳过生命周期中的测试阶段 --&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">        &lt;skipTests&gt;true&lt;/skipTests&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></li><li><p>资源文件插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;project&gt;  </span><br><span class="line">  ...  </span><br><span class="line">  &lt;build&gt;  </span><br><span class="line">    ...  </span><br><span class="line">    &lt;resources&gt;  </span><br><span class="line">      &lt;!--</span><br><span class="line">          资源插件默认行为只是将项目主资源文件复制到主代码编译输出目录中，将测试资源文件复制到测试代码编译输出目录中。</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;resource&gt;  </span><br><span class="line">        &lt;!-- 指定资源文件目录 --&gt;</span><br><span class="line">        &lt;directory&gt;src/main/resources&lt;/directory&gt;  </span><br><span class="line">        &lt;!--</span><br><span class="line">          开启资源过滤 ：（默认false）</span><br><span class="line">            filtering：作用是用环境变量，pom文件里定义的属性和指定文件里的属性替换属性文件的占位符。</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;filtering&gt;true&lt;/filtering&gt;</span><br><span class="line">        &lt;!-- includes之中的也会被过滤 --&gt;  </span><br><span class="line">        &lt;includes&gt;  </span><br><span class="line">          &lt;include&gt;**/*.xml&lt;/include&gt;</span><br><span class="line">        &lt;/includes&gt;</span><br><span class="line">      &lt;/resource&gt;</span><br><span class="line">      &lt;resource&gt;</span><br><span class="line">        &lt;directory&gt;src/main/resources&lt;/directory&gt;</span><br><span class="line">        &lt;filtering&gt;false&lt;/filtering&gt;</span><br><span class="line">        &lt;!-- excludes之外的不会被过滤 --&gt;</span><br><span class="line">        &lt;excludes&gt;</span><br><span class="line">          &lt;exclude&gt;**/*.xml&lt;/exclude&gt;  </span><br><span class="line">        &lt;/excludes&gt;  </span><br><span class="line">      &lt;/resource&gt;  </span><br><span class="line">      ...  </span><br><span class="line">    &lt;/resources&gt;  </span><br><span class="line">    ...  </span><br><span class="line">  &lt;/build&gt;  </span><br><span class="line">  ...  </span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>mybatis逆向工程插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;configurationFile&gt;$&#123;basedir&#125;/src/main/resources/generatorConfig.xml&lt;/configurationFile&gt;</span><br><span class="line">&lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">goal：mybatis-generator:generate</span><br></pre></td></tr></table></figure></li></ul><h3 id="Maven中的属性"><a href="#Maven中的属性" class="headerlink" title="Maven中的属性"></a>Maven中的属性</h3><ul><li>内置属性：<ol><li><code>${basedir}</code>：项目的根目录(包含pom.xml文件的目录；</li><li><code>${version}</code>：项目版本；</li></ol></li><li>POM属性：<ol><li><code>${project.build.sourceDirectory}</code>：项目的主源码目录，默认为src/main/java；</li><li><code>${project.build.testSourceDirectory}</code>：项目的测试源码目录，默认为src/test/java；</li><li><code>${project.build.directory}</code>：项目构件输出目录，默认为target/；</li><li><code>${project.outputDirectory}</code>：项目主代码编译输出目录，默认为target/classes/；</li><li><code>${project.testOutputDirectory}</code>：项目测试代码编译输出目录，默认为target/test-classes/；</li><li><code>${project.groupId}</code>：项目的groupId；</li><li><code>${project.artifactId}</code>：项目的artifactId；</li><li><code>${project.version}</code>：项目的version，与${version}等价；</li><li><code>${project.build.fianlName}</code>：项目打包输出文件的名称，默认为${project.artifactId}-${project.version}；</li></ol></li><li>自定义属性：用户可以在POM的<properties>元素下自定义Maven属性；</properties></li><li>Settings属性：用户使用settings.开头的属性引用settings.xml文件中XML元素的值；</li><li>Java系统属性：所有Java系统属性都可以使用Maven属性引用；</li><li>环境变量属性：所有环境变量都可以使用以env.开头的Maven属性引用；</li></ul><h3 id="聚合工程"><a href="#聚合工程" class="headerlink" title="聚合工程"></a>聚合工程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0</span><br><span class="line">                      http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;com.mycompany.app&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;app&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">  &lt;modules&gt;</span><br><span class="line">    &lt;module&gt;my-app&lt;/module&gt;</span><br><span class="line">    &lt;module&gt;my-webapp&lt;/module&gt;</span><br><span class="line">  &lt;/modules&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0</span><br><span class="line">                      http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;com.mycompany.app&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;app&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;/parent&gt;</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://maven.apache.org/guides/getting-started/index.html" target="_blank" rel="noopener">Apache官方-快速入门</a></li><li><a href="https://www.cnblogs.com/forerver-elf/p/6257395.html" target="_blank" rel="noopener">博客园-Maven属性、profile和资源过滤</a></li><li><a href="https://www.cnblogs.com/wkrbky/p/6352188.html" target="_blank" rel="noopener">博客园-Maven常用命令</a></li><li><a href="https://blog.csdn.net/benhuo931115/article/details/80674760" target="_blank" rel="noopener">CSDN-30个常用的 Maven 命令</a></li><li><a href="https://blog.csdn.net/en_joker/article/details/84067071" target="_blank" rel="noopener">CSDN-maven-surefire-plugin简介</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;what-is&quot;&gt;&lt;a href=&quot;#what-is&quot; class=&quot;headerlink&quot; title=&quot;what is&quot;&gt;&lt;/a&gt;what is&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;maven 是 apache软件基金会的一个产品；&lt;/li&gt;
&lt;li&gt;maven 是一个
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="maven" scheme="https://jmzc4j.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建博客系统</title>
    <link href="https://jmzc4j.github.io/2019/08/28/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    <id>https://jmzc4j.github.io/2019/08/28/使用Hexo搭建博客系统/</id>
    <published>2019-08-27T22:29:42.000Z</published>
    <updated>2019-08-27T23:08:38.151Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么"></a>Hexo是什么</h3><ul><li>Hexo是Node编写的一个基于markdown引擎的用来快速开发静态博客系统的框架；</li><li>官方网站：<a href="https://hexo.io/" title="hexo.io" target="_blank" rel="noopener">hexo.io</a>;</li></ul><h3 id="Hexo怎么用"><a href="#Hexo怎么用" class="headerlink" title="Hexo怎么用"></a>Hexo怎么用</h3><ul><li>准备环境</li></ul><ol><li>安装node.js,<a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载地址</a>;</li><li>安装git,<a href="https://git-scm.com/" target="_blank" rel="noopener">下载地址</a>;</li></ol><ul><li>安装 hexo-cli </li></ul><ol><li><p>打开GitBash，执行<code>$ npm install -g hexo-cli</code>;</p></li><li><p>创建一个hexo的工作目录，进入目录执行<code>hexo init &lt;folder&gt;</code>;</p></li><li><p>进入初始化的那个目录，执行<code>npm install</code>来构建hexo并安装相应依赖;</p></li><li><p>配置_config.yml文件;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Jmzc&apos;s Blog</span><br><span class="line">subtitle:</span><br><span class="line">description: Java,Study,Notes,Daily Life,</span><br><span class="line">keywords:</span><br><span class="line">author: Jmzc</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://jmzc4j.github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:jmzc4j/jmzc4j.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>执行<code>hexo new &lt;title&gt;</code> 新建一个blog；</p></li><li><p>在hexo根目录的source/_posts/找到title.md文件进行博客编辑;</p></li><li><p>执行<code>hexo g 或 hexo generate</code> 生成html静态页面（该页面在pubic文件夹下）</p></li><li><p>执行<code>hexo s 或 hexo server</code> 启动hexo服务在本地进行测试；</p></li><li><p>执行<code>hexo d 或 hexo devlop</code> 将生成的静态页发布到github上;</p></li></ol><ul><li>推送源码到github</li></ul><ol><li><code>git init</code></li><li><code>ssh-keygen -C &#39;jmzc-blog&#39;</code>,然后将家目录中的公钥复制到github上</li><li><code>git remote add hexo-ssh git@github.com:jmzc4j/jmzc4j.github.io.git</code></li><li><code>git checkout -b source</code></li><li><code>git add .</code></li><li><code>git commit -m &#39;hexo init&#39;</code></li><li><code>git push hexo-ssh source</code> </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo是什么&quot;&gt;&lt;a href=&quot;#Hexo是什么&quot; class=&quot;headerlink&quot; title=&quot;Hexo是什么&quot;&gt;&lt;/a&gt;Hexo是什么&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Hexo是Node编写的一个基于markdown引擎的用来快速开发静态博客系统的框架；&lt;
      
    
    </summary>
    
      <category term="学习笔记" scheme="https://jmzc4j.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="https://jmzc4j.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
